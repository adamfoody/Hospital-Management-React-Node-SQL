{"ast":null,"code":"var _jsxFileName = \"/Users/adamfoody/mwa/test/client/my-app/src/PatientTable.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport { TableContainer, Table, Paper, TableHead, TableRow, TableCell, TableBody, makeStyles } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  tableHead: {\n    borderBottomStyle: \"solid\",\n    borderBottomColor: \"blue\"\n  },\n  stickyHeader: {}\n}));\nexport default function PatientTable() {\n  _s();\n\n  const classes = useStyles();\n  const [patients, setPatients] = React.useState([]);\n  const [displayPatients, setDisplayPatients] = useState(true);\n\n  function fetchPatientRecords() {\n    axios.get('http://localhost:8081/patient').then(response => {\n      // handle success\n      setPatients(response.data);\n    });\n  }\n\n  for (let i = 0; i < 1; i++) {\n    fetchPatientRecords();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: displayPatients == true && /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      className: classes.tableContainer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n/*thoughts, why not call fetchPatientRecords in a function in the return statement, then after render the table. \nThis way we call the function and setPatients = \n\n\n\n*/\n\n_s(PatientTable, \"aUR9V3hJNcdmYM3hwl4ciRaZ0Gc=\", false, function () {\n  return [useStyles];\n});\n\n_c = PatientTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"PatientTable\");","map":{"version":3,"sources":["/Users/adamfoody/mwa/test/client/my-app/src/PatientTable.js"],"names":["React","useState","useEffect","axios","TableContainer","Table","Paper","TableHead","TableRow","TableCell","TableBody","makeStyles","useStyles","theme","tableHead","borderBottomStyle","borderBottomColor","stickyHeader","PatientTable","classes","patients","setPatients","displayPatients","setDisplayPatients","fetchPatientRecords","get","then","response","data","i","tableContainer"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,EAAyBC,KAAzB,EAAgCC,KAAhC,EAAuCC,SAAvC,EAAkDC,QAAlD,EAA4DC,SAA5D,EAAuEC,SAAvE,EAAkFC,UAAlF,QAAmG,mBAAnG;;AAGA,MAAMC,SAAS,GAAGD,UAAU,CAAEE,KAAD,KAAY;AACrCC,EAAAA,SAAS,EAAE;AACPC,IAAAA,iBAAiB,EAAE,OADZ;AAEPC,IAAAA,iBAAiB,EAAE;AAFZ,GAD0B;AAKrCC,EAAAA,YAAY,EAAC;AALwB,CAAZ,CAAD,CAA5B;AAaA,eAAe,SAASC,YAAT,GAAwB;AAAA;;AAEnC,QAAMC,OAAO,GAAGP,SAAS,EAAzB;AAEA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BrB,KAAK,CAACC,QAAN,CAAe,EAAf,CAAhC;AACA,QAAM,CAACqB,eAAD,EAAkBC,kBAAlB,IAAwCtB,QAAQ,CAAC,IAAD,CAAtD;;AAEA,WAASuB,mBAAT,GAA+B;AAC3BrB,IAAAA,KAAK,CAACsB,GAAN,CAAU,+BAAV,EAA2CC,IAA3C,CAAiDC,QAAD,IAAc;AAC5D;AACAN,MAAAA,WAAW,CAACM,QAAQ,CAACC,IAAV,CAAX;AAED,KAJD;AAKD;;AAEH,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAC,CAAjB,EAAoBA,CAAC,EAArB,EAAwB;AACpBL,IAAAA,mBAAmB;AACtB;;AAOD,sBAII;AAAA,cACGF,eAAe,IAAI,IAAnB,iBAEC,QAAC,cAAD;AAAgB,MAAA,SAAS,EAAEhB,KAA3B;AAAkC,MAAA,SAAS,EAAEa,OAAO,CAACW;AAArD;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,UAJJ;AA6BH;AAED;AACA;AACA;AACA;AACA;AACA;;GA5DwBZ,Y;UAEJN,S;;;KAFIM,Y","sourcesContent":["import \"./App.css\";\nimport React , {useState, useEffect} from \"react\"\nimport axios from 'axios';\nimport { TableContainer, Table, Paper, TableHead, TableRow, TableCell, TableBody, makeStyles} from '@material-ui/core';\n\n\nconst useStyles = makeStyles((theme) => ({\n    tableHead: {\n        borderBottomStyle: \"solid\",\n        borderBottomColor: \"blue\"\n    },\n    stickyHeader:{\n      \n    }\n}));\n\n\n\n\nexport default function PatientTable() {\n\n    const classes = useStyles();\n\n    const [patients, setPatients] = React.useState([]);\n    const [displayPatients, setDisplayPatients] = useState(true);\n\n    function fetchPatientRecords() {\n        axios.get('http://localhost:8081/patient').then((response) => {\n          // handle success\n          setPatients(response.data);\n         \n        });\n      }\n\n    for(let i = 0; i<1; i++){\n        fetchPatientRecords();\n    }\n   \n\n   \n\n          \n          \n    return (     \n\n\n\n        <div>\n        {  displayPatients == true && (\n\n            <TableContainer component={Paper} className={classes.tableContainer}>\n\n\n\n\n\n                \n            </TableContainer>\n\n      \n           \n          \n            \n        )}\n     \n      \n\n     \n                           \n\n        </div>\n    )\n}\n\n/*thoughts, why not call fetchPatientRecords in a function in the return statement, then after render the table. \nThis way we call the function and setPatients = \n\n\n\n*/\n"]},"metadata":{},"sourceType":"module"}
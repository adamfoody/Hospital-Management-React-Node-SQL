{"ast":null,"code":"var _jsxFileName = \"/Users/adamfoody/mwa/test/client/my-app/src/PatientTable.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport React, { useState } from \"react\";\nimport axios from 'axios';\nimport { TableContainer, Table, Paper, TableHead, TableRow, TableCell, TableBody } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PatientTable() {\n  _s();\n\n  const [patients, setPatients] = React.useState([]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}\n/*thoughts, why not call fetchPatientRecords in a function in the return statement, then after render the table. \nThis way we call the function and setPatients = \n\n\n\n*/\n\n_s(PatientTable, \"gP/f30i9hS2MeVG+w9sXvtLidTA=\");\n\n_c = PatientTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"PatientTable\");","map":{"version":3,"sources":["/Users/adamfoody/mwa/test/client/my-app/src/PatientTable.js"],"names":["React","useState","axios","TableContainer","Table","Paper","TableHead","TableRow","TableCell","TableBody","PatientTable","patients","setPatients"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,EAAyBC,KAAzB,EAAgCC,KAAhC,EAAuCC,SAAvC,EAAkDC,QAAlD,EAA4DC,SAA5D,EAAuEC,SAAvE,QAAuF,mBAAvF;;AAOA,eAAe,SAASC,YAAT,GAAwB;AAAA;;AAEnC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BZ,KAAK,CAACC,QAAN,CAAe,EAAf,CAAhC;AACA,sBAII;AAAA;AAAA;AAAA;AAAA,UAJJ;AAWH;AAED;AACA;AACA;AACA;AACA;AACA;;GArBwBS,Y;;KAAAA,Y","sourcesContent":["import \"./App.css\";\nimport React,{useState} from \"react\"\nimport axios from 'axios';\nimport { TableContainer, Table, Paper, TableHead, TableRow, TableCell, TableBody} from '@material-ui/core';\n\n\n\n\n\n\nexport default function PatientTable() {\n\n    const [patients, setPatients] = React.useState([]);\n    return (     \n\n\n\n        <div>\n        \n     \n                           \n\n        </div>\n    )\n}\n\n/*thoughts, why not call fetchPatientRecords in a function in the return statement, then after render the table. \nThis way we call the function and setPatients = \n\n\n\n*/\n"]},"metadata":{},"sourceType":"module"}
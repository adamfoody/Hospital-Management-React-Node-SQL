{"ast":null,"code":"var _jsxFileName = \"/Users/adamfoody/mwa/test/client/my-app/src/PatientTable.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport { TableContainer, Button, Table, Paper, TableHead, TableRow, TableCell, TableBody, makeStyles } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  tableHead: {\n    borderBottomStyle: \"solid\",\n    borderBottomColor: \"blue\"\n  },\n  stickyHeader: {}\n}));\nexport default function PatientTable() {\n  _s();\n\n  const classes = useStyles();\n  const [patients, setPatients] = React.useState([]);\n  const [displayPatients, setDisplayPatients] = useState(true); // will be used to render the treatment by id for the patient tables \n\n  const [treatmentsById, setTreatmentsById] = useState([]);\n  const [displayTreatmentForPatient, setDisplayTreatmentForPatient] = useState(false);\n\n  function fetchPatientRecords() {\n    axios.get('http://localhost:8081/patient').then(response => {\n      // handle success\n      setPatients(response.data);\n    });\n  }\n\n  function deletePatient(patient1) {\n    axios.delete(`http://localhost:8081/deletePatient/${patient1}`).then(response => {\n      // handle success\n      var resData = response.data;\n      let data = JSON.stringify(resData);\n      window.alert('Response recieved from server = ' + data);\n    });\n  }\n\n  function deletePatientHandler() {\n    deletePatient();\n  }\n\n  function fetchTreatmentRecordsById(treatmentId1) {\n    axios.get(`http://localhost:8081/treatmentId/${treatmentId1}`).then(response => {\n      // handle success\n      setTreatmentsById(response.data);\n      setDisplayTreatmentForPatient(true);\n    });\n  } // useEffect with an empty array at the end. This means it will be called just once when the component is mounted. \n\n\n  useEffect(() => {\n    fetchPatientRecords();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"text-align-center\",\n      children: displayPatients == true && /*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        className: classes.tableContainer,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          stickyHeader: true,\n          sx: {\n            minWidth: 650\n          },\n          \"aria-label\": \"simple table\",\n          variant: \"outlined\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              style: {\n                borderBottom: \"2px solid #3f51b5\",\n                borderTop: \"2px solid #3f51b5\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Patient Table\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 21\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 16\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \" Full Name \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 24\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Patient ID \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 39\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \" DOB\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 38\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \" Address\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 38\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \" Treatment ID\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 38\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \" Allergy \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 38\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \" View Treatment \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 38\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \" Delete Patient\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 38\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: patients.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n              sx: {\n                '&:last-child td, &:last-child th': {\n                  border: 0\n                }\n              },\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                component: \"th\",\n                scope: \"row\",\n                children: row.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: row.patientId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: row.dob\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: row.address\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: row.treatmentId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 15\n              }, this), row.allergy == 0 && /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: \"PATIENT HAS NO ALLERGY!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 17\n              }, this), row.allergy == 1 && /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                className: \"hasAllergy\",\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \" PATIENT HAS ALLERGY! \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"smallButton\",\n                  color: \"primary\",\n                  variant: \"outlined\",\n                  onClick: () => {\n                    fetchTreatmentRecordsById(row.treatmentId);\n                  },\n                  children: \"View Treatment\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"smallButton\",\n                  color: \"secondary\",\n                  variant: \"outlined\",\n                  onClick: () => {\n                    deletePatient(row.patientId);\n                  },\n                  children: \"Delete Patient\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 17\n              }, this)]\n            }, row.patientId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 13\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: displayTreatmentForPatient == true && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: /*#__PURE__*/_jsxDEV(\"u\", {\n            children: [\" Treatment Results for Treatment ID:\", treatmentsById.treatmentId]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 20\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\" Treatment Type \", treatmentsById.treatmentType]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Treatment Category \", treatmentsById.treatmentCategory]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\" Treatment Start Date \", treatmentsById.startDate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 19\n        }, this), treatmentsById.prescription == 0 && /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"NO PRESCRIPTION ISSUED!  \", treatmentsById.prescription]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 21\n        }, this), treatmentsById.prescription == 1 && /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"hasPrescription\",\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \" PRESCRIPTION ISSUED! \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }, this) // added conditional rendering for the prescription, do same for the allergy and done\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        className: classes.tableContainer,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          stickyHeader: true,\n          sx: {\n            minWidth: 650\n          },\n          \"aria-label\": \"simple table\",\n          variant: \"outlined\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              style: {\n                borderBottom: \"2px solid #3f51b5\",\n                borderTop: \"2px solid #3f51b5\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Treatment Table for\\u2026 FINISH\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 21\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 16\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \" Treatment ID\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 24\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 39\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \" Category\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 38\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \" Start Date \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 38\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \" Prescription\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 38\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \" Close \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 38\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              sx: {\n                '&:last-child td, &:last-child th': {\n                  border: 0\n                }\n              },\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                component: \"th\",\n                scope: \"row\",\n                children: treatmentsById.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: treatmentsById.TreatmentType\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: treatmentsById.treatmentCategory\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: treatmentsById.startDate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 15\n              }, this), treatmentsById.prescription == 0 && /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: \"NO PRESCIPTION!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 17\n              }, this), treatmentsById.prescription == 1 && /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                className: \"hasPrescription\",\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \" PRESCRIPTION \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"smallButton\",\n                  color: \"primary\",\n                  variant: \"outlined\",\n                  children: \"Close\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 17\n              }, this)]\n            }, row.treatmentId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n}\n/*thoughts, why not call fetchPatientRecords in a function in the return statement, then after render the table. \nThis way we call the function and setPatients = \n\n\n\n*/\n\n_s(PatientTable, \"/f+wXkxVlKXbrOznf7NEWAmBqVk=\", false, function () {\n  return [useStyles];\n});\n\n_c = PatientTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"PatientTable\");","map":{"version":3,"sources":["/Users/adamfoody/mwa/test/client/my-app/src/PatientTable.js"],"names":["React","useState","useEffect","axios","TableContainer","Button","Table","Paper","TableHead","TableRow","TableCell","TableBody","makeStyles","useStyles","theme","tableHead","borderBottomStyle","borderBottomColor","stickyHeader","PatientTable","classes","patients","setPatients","displayPatients","setDisplayPatients","treatmentsById","setTreatmentsById","displayTreatmentForPatient","setDisplayTreatmentForPatient","fetchPatientRecords","get","then","response","data","deletePatient","patient1","delete","resData","JSON","stringify","window","alert","deletePatientHandler","fetchTreatmentRecordsById","treatmentId1","tableContainer","minWidth","borderBottom","borderTop","map","row","border","name","patientId","dob","address","treatmentId","allergy","treatmentType","treatmentCategory","startDate","prescription","TreatmentType"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport React , {useState, useEffect} from \"react\"\nimport axios from 'axios';\nimport { TableContainer, Button, Table, Paper, TableHead, TableRow, TableCell, TableBody, makeStyles} from '@material-ui/core';\n\n\nconst useStyles = makeStyles((theme) => ({\n    tableHead: {\n        borderBottomStyle: \"solid\",\n        borderBottomColor: \"blue\"\n    },\n    stickyHeader:{\n      \n    }\n}));\n\n\n\n\nexport default function PatientTable() {\n\n    const classes = useStyles();\n\n    const [patients, setPatients] = React.useState([]);\n    const [displayPatients, setDisplayPatients] = useState(true);\n\n    // will be used to render the treatment by id for the patient tables \n    const [treatmentsById, setTreatmentsById] = useState([]);\n    const [displayTreatmentForPatient, setDisplayTreatmentForPatient] = useState(false);\n\n    function fetchPatientRecords() {\n        axios.get('http://localhost:8081/patient').then((response) => {\n          // handle success\n          setPatients(response.data);\n         \n        });\n      }\n\n      function deletePatient(patient1) {\n        axios\n          .delete(`http://localhost:8081/deletePatient/${patient1}`)\n          .then((response) => {\n            // handle success\n            var resData = response.data;\n            let data = JSON.stringify(resData);\n            window.alert('Response recieved from server = ' + data);\n          });\n      }\n\n\n      function deletePatientHandler() {\n        deletePatient();\n      }\n\n      function fetchTreatmentRecordsById(treatmentId1) {\n        axios\n          .get(`http://localhost:8081/treatmentId/${treatmentId1}`)\n          .then((response) => {\n            // handle success\n            setTreatmentsById(response.data);\n            setDisplayTreatmentForPatient(true);\n           \n          });\n      }\n\n    // useEffect with an empty array at the end. This means it will be called just once when the component is mounted. \n\n    useEffect(() => {\n        fetchPatientRecords();\n      }, []);\n   \n\n          \n          \n    return (     \n    \n\n\n\n        <div>\n        <main className=\"text-align-center\">\n      \n        {  displayPatients == true && (\n\n            \n          \n            <TableContainer component={Paper} className={classes.tableContainer}>\n            \n\n            <Table stickyHeader sx={{ minWidth: 650 }} aria-label=\"simple table\" variant=\"outlined\" >\n        <TableHead >\n        <TableCell\n                style={{\n                    borderBottom: \"2px solid #3f51b5\", borderTop: \"2px solid #3f51b5\"\n                    \n                    \n                }}\n\n\n            >\n               <h3> <strong>Patient Table</strong> </h3>\n            </TableCell>\n      \n          <TableRow >\n      \n            <TableCell><strong> Full Name </strong> </TableCell>\n            <TableCell align=\"right\"> <strong>Patient ID </strong></TableCell>\n            <TableCell align=\"right\"><strong> DOB</strong> </TableCell>\n            <TableCell align=\"right\"><strong> Address</strong></TableCell>\n            <TableCell align=\"right\"><strong> Treatment ID</strong></TableCell>\n            <TableCell align=\"right\"><strong> Allergy </strong></TableCell>\n            <TableCell align=\"right\"><strong> View Treatment </strong> </TableCell>\n            <TableCell align=\"right\"><strong> Delete Patient</strong></TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {patients.map((row) => (\n            <TableRow\n              key={row.patientId}\n              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n            >\n              <TableCell component=\"th\" scope=\"row\">\n                {row.name}\n              </TableCell>\n              <TableCell align=\"right\">{row.patientId}</TableCell>\n              <TableCell align=\"right\">{row.dob}</TableCell>\n              <TableCell align=\"right\">{row.address}</TableCell>\n              <TableCell align=\"right\">{row.treatmentId}</TableCell>\n\n                {row.allergy == 0 && (\n                <TableCell align=\"right\">PATIENT HAS NO ALLERGY!</TableCell>\n                )}\n                {row.allergy == 1 && (\n                <TableCell align=\"right\" className=\"hasAllergy\"> \n                <strong> PATIENT HAS ALLERGY! </strong> \n                </TableCell>\n                )}\n                <TableCell> \n\n                <Button\n                  className=\"smallButton\"\n                  color=\"primary\"\n                  variant=\"outlined\"\n                  onClick={() => {\n                    fetchTreatmentRecordsById(row.treatmentId);\n                  }}\n                >\n                 \n                \n               \n                  View Treatment\n                </Button>\n           \n\n                </TableCell>\n\n\n                <TableCell>\n                  \n\n                <Button\n                  className=\"smallButton\"\n                  color=\"secondary\"\n                  variant=\"outlined\"\n                  onClick={() => {\n                    deletePatient(row.patientId);\n                  }}\n                 \n                >\n              \n                  Delete Patient\n                </Button>\n                  \n                </TableCell>\n\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n  \n\n\n\n\n            </TableContainer>\n\n      \n  \n          \n            \n        )}\n     \n      \n        </main>\n\n        <main>\n        \n        {displayTreatmentForPatient == true && (\n                <div>\n                  <h2>\n                \n                   <u> Treatment Results for Treatment ID: \n                    {treatmentsById.treatmentId}</u> \n                  </h2>\n                  <li> Treatment Type {treatmentsById.treatmentType}</li>\n                  <li>\n                 \n                    Treatment Category {treatmentsById.treatmentCategory}\n                  </li>\n                  <li> Treatment Start Date {treatmentsById.startDate}</li>\n\n                  {treatmentsById.prescription == 0 && (\n                    <li>\n                   \n                      NO PRESCRIPTION ISSUED!  {treatmentsById.prescription}\n                    </li>\n                  )}\n                  {treatmentsById.prescription == 1 && (\n                    <li className=\"hasPrescription\">\n                   \n                      <strong> PRESCRIPTION ISSUED! </strong>\n                    </li>\n                  )}\n                </div>\n                // added conditional rendering for the prescription, do same for the allergy and done\n\n\n              \n              )}\n                  \n\n\n\n        </main>\n        \n        <main>\n        <TableContainer component={Paper} className={classes.tableContainer}>\n            \n\n            <Table stickyHeader sx={{ minWidth: 650 }} aria-label=\"simple table\" variant=\"outlined\" >\n        <TableHead >\n        <TableCell\n                style={{\n                    borderBottom: \"2px solid #3f51b5\", borderTop: \"2px solid #3f51b5\"\n                    \n                    \n                }}\n\n\n            >\n               <h3> <strong>Treatment Table for… FINISH</strong> </h3>\n            </TableCell>\n      \n          <TableRow >\n      \n            <TableCell><strong> Treatment ID</strong> </TableCell>\n            <TableCell align=\"right\"> <strong>Type</strong></TableCell>\n            <TableCell align=\"right\"><strong> Category</strong> </TableCell>\n            <TableCell align=\"right\"><strong> Start Date </strong></TableCell>\n            <TableCell align=\"right\"><strong> Prescription</strong></TableCell>\n            <TableCell align=\"right\"><strong> Close </strong></TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n    \n            <TableRow\n              key={row.treatmentId}\n              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n            >\n              <TableCell component=\"th\" scope=\"row\">\n                {treatmentsById.name}\n              </TableCell>\n              <TableCell align=\"right\">\n\n\n               </TableCell>\n              <TableCell align=\"right\">{treatmentsById.TreatmentType}</TableCell>\n              <TableCell align=\"right\">{treatmentsById.treatmentCategory}</TableCell>\n              <TableCell align=\"right\">{treatmentsById.startDate}</TableCell>\n\n                {treatmentsById.prescription == 0 && (\n                <TableCell align=\"right\">NO PRESCIPTION!</TableCell>\n                )}\n                {treatmentsById.prescription == 1 && (\n                <TableCell align=\"right\" className=\"hasPrescription\"> \n                <strong> PRESCRIPTION </strong> \n                </TableCell>\n                )}\n                <TableCell> \n\n                <Button\n                  className=\"smallButton\"\n                  color=\"primary\"\n                  variant=\"outlined\"\n               \n                >\n                 \n                \n               Close\n                </Button>\n           \n\n                </TableCell>\n\n\n                <TableCell>\n                  \n                  \n                </TableCell>\n\n            </TableRow>\n        \n        </TableBody>\n      </Table>\n  \n\n\n\n\n            </TableContainer>\n\n        </main>\n                           \n\n        </div>\n    )\n}\n\n/*thoughts, why not call fetchPatientRecords in a function in the return statement, then after render the table. \nThis way we call the function and setPatients = \n\n\n\n*/\n\n\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/adamfoody/mwa/A2.2/client/my-app/src/Allergy.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { FormControl, TextField, makeStyles, FormLabel, Grid, Button, ButtonGroup, Box, Radio, RadioGroup, FormGroup, FormControlLabel, Container, InputLabel, MenuItem, Select, Icon } from '@material-ui/core';\nimport './App.css';\nimport { green, orange, yellow } from '@material-ui/core/colors';\nimport Swal from 'sweetalert2';\nimport { withStyles } from '@material-ui/core/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GreenButton = withStyles(theme => ({\n  root: {\n    color: theme.palette.getContrastText(green[500]),\n    backgroundColor: green[500],\n    '&:hover': {\n      backgroundColor: green[700]\n    },\n    color: yellow\n  }\n}))(Button);\n_c = GreenButton;\nconst OrangeButton = withStyles(theme => ({\n  root: {\n    color: theme.palette.getContrastText(orange[500]),\n    backgroundColor: orange[500],\n    '&:hover': {\n      backgroundColor: orange[700]\n    },\n    color: yellow\n  }\n}))(Button);\nexport default function Allergy() {\n  _s();\n\n  const [allergyId, setAllergyId] = useState('');\n  const [allergyName, setAllergyName] = useState('');\n  const [risk, setRisk] = useState('');\n  const [patientId, setPatientId] = useState('');\n  const [notes, setNotes] = useState('');\n\n  const handleClearForm = () => (setAllergyId(''), setAllergyName(''), setRisk(''), setPatientId(''), setNotes(''));\n\n  function createPatient() {\n    const value = {\n      allergyId: allergyId,\n      allergyName: allergyName,\n      risk: risk,\n      patientId: patientId,\n      notes: notes\n    };\n    axios.post('http://localhost:8081/createallergy', value).then(response => {\n      // handle success\n      var resData = response.data;\n      Swal.fire({\n        icon: 'success',\n        title: 'New Allergy saved!'\n      });\n      handleClearForm();\n    });\n  }\n\n  function updateAllergy() {\n    const value = {\n      allergyId: allergyId,\n      allergyName: allergyName,\n      risk: risk,\n      patientId: patientId,\n      notes: notes\n    };\n    axios.put(`http://localhost:8081/updateallergy/${allergyId}`, value).then(response => {\n      // handle success\n      Swal.fire({\n        icon: 'success',\n        title: 'Updated Allergy!'\n      });\n      handleClearForm();\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        className: \"forms\",\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          style: {\n            color: \"#3f51b5\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: /*#__PURE__*/_jsxDEV(\"u\", {\n                children: \"  Create Allergy \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          className: \"forms\",\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            className: \"textfield\",\n            type: \"text\",\n            placeholder: \"Allergy ID\",\n            alignItems: \"center\",\n            value: allergyId,\n            onChange: e => setAllergyId(e.target.value),\n            variant: \"outlined\",\n            label: \"Allergy ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            className: \"textfield\",\n            label: \"Allergy Name\",\n            type: \"text\",\n            placeholder: \"Allergy Name\",\n            value: allergyName,\n            onChange: e => setAllergyName(e.target.value),\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 18\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            className: \"textfield\",\n            type: \"text\",\n            label: \"Risk\",\n            value: risk,\n            onChange: e => setRisk(e.target.value),\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            className: \"textfield\",\n            label: \"Patient ID\",\n            type: \"number\",\n            placeholder: \"Patient ID\",\n            value: patientId,\n            onChange: e => setPatientId(e.target.value),\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              className: \"textfield2\",\n              type: \"number\",\n              placeholder: \"Notes\",\n              label: \"Notes\",\n              multiline: true,\n              rows: 5,\n              value: notes,\n              onChange: e => setNotes(e.target.value),\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 1\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 1\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          className: \"patientButtons\",\n          children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n            variant: \"outlined\",\n            className: \"smallButton\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              color: \"primary\",\n              variant: \"contained\",\n              className: \"smallButton\",\n              onClick: createPatient,\n              style: {\n                backgroundcolor: \"red\"\n              },\n              children: \"Save Allergy\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 16\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              color: \"secondary\",\n              variant: \"contained\",\n              className: \"smallButton\",\n              onClick: handleClearForm,\n              children: \"Clear Form\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 16\n            }, this), /*#__PURE__*/_jsxDEV(GreenButton, {\n              variant: \"contained\",\n              color: \"secondary\",\n              onClick: updateAllergy,\n              children: \"Update Allergy &#128233\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 16\n            }, this), \"\\uD83D\\uDCE5\\u2716\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Allergy, \"S2B+DcKfw7jnbD3NMubAF8e8VV8=\");\n\n_c2 = Allergy;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GreenButton\");\n$RefreshReg$(_c2, \"Allergy\");","map":{"version":3,"sources":["/Users/adamfoody/mwa/A2.2/client/my-app/src/Allergy.js"],"names":["React","useState","axios","FormControl","TextField","makeStyles","FormLabel","Grid","Button","ButtonGroup","Box","Radio","RadioGroup","FormGroup","FormControlLabel","Container","InputLabel","MenuItem","Select","Icon","green","orange","yellow","Swal","withStyles","GreenButton","theme","root","color","palette","getContrastText","backgroundColor","OrangeButton","Allergy","allergyId","setAllergyId","allergyName","setAllergyName","risk","setRisk","patientId","setPatientId","notes","setNotes","handleClearForm","createPatient","value","post","then","response","resData","data","fire","icon","title","updateAllergy","put","e","target","backgroundcolor"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport axios from 'axios';\nimport {\n  FormControl,\n  TextField,\n  makeStyles,\n  FormLabel,\n  Grid,\n  Button,\n  ButtonGroup,\n  Box, Radio, RadioGroup, FormGroup,FormControlLabel\n, Container, InputLabel, MenuItem, Select,\nIcon} from '@material-ui/core';\nimport './App.css';\nimport { green, orange, yellow} from '@material-ui/core/colors'\nimport Swal from 'sweetalert2';\n \nimport { withStyles } from '@material-ui/core/styles'\n\n\nconst GreenButton = withStyles((theme) => ({\n    root: {\n      color: theme.palette.getContrastText(green[500]),\n      backgroundColor: green[500],\n      '&:hover': {\n        backgroundColor: green[700]\n      },\n      color: yellow\n    }\n  }))(Button)\n  \n  const OrangeButton = withStyles((theme) => ({\n    root: {\n      color: theme.palette.getContrastText(orange[500]),\n      backgroundColor: orange[500],\n      '&:hover': {\n        backgroundColor: orange[700]\n      },\n      color: yellow\n    }\n  }))(Button)\n\n\nexport default function Allergy() {\n\n    const [allergyId, setAllergyId] = useState('');\n    const [allergyName, setAllergyName] = useState('');\n    const [risk, setRisk] = useState('');\n    const [patientId, setPatientId] = useState('');\n    const [notes, setNotes] = useState('');\n\n   \n    const handleClearForm = () => (\n        setAllergyId(''),\n        setAllergyName(''),\n        setRisk(''),\n        setPatientId(''),\n        setNotes('')\n    )\n    \n  function createPatient() {\n    const value = {\n     allergyId: allergyId,\n     allergyName: allergyName,\n     risk: risk,\n     patientId: patientId,\n     notes: notes\n    };\n\n    axios.post('http://localhost:8081/createallergy', value).then((response) => {\n      // handle success\n      var resData = response.data;\n      Swal.fire({\n        icon: 'success',\n        title: 'New Allergy saved!',\n     \n      })\n      handleClearForm();\n    });\n  }\n\n  function updateAllergy(){\n    const value = {\n        allergyId: allergyId,\n        allergyName: allergyName,\n        risk: risk,\n        patientId: patientId,\n        notes: notes\n       \n    };\n    axios.put(`http://localhost:8081/updateallergy/${allergyId}`, value)\n    .then( (response) => {\n        // handle success\n        Swal.fire({\n          icon: 'success',\n          title: 'Updated Allergy!',\n      \n       \n        })\n        handleClearForm();\n     \n    });\n  }\n\n\n\n\n    return (\n        <div>\n        <Box \n        display=\"flex\" \n        justifyContent=\"center\"\n         alignItems=\"center\">\n         <FormControl  className=\"forms\">\n        \n         <FormLabel style={{color:\"#3f51b5\"}} >\n             <h2 >\n              <strong>\n                <u>  Create Allergy </u>\n              </strong>\n            </h2>\n            </FormLabel>\n         \n            \n         <FormGroup className=\"forms\">\n            <TextField\n                 className=\"textfield\"\n               \n                 type=\"text\"\n                 placeholder=\"Allergy ID\"\n                 alignItems=\"center\"\n                value={allergyId}\n                onChange={(e) => setAllergyId(e.target.value)}\n                 variant=\"outlined\"\n                 label=\"Allergy ID\"\n                 >\n                 </TextField>\n                <br/>\n               \n                 <TextField\n                 className=\"textfield\"\n                 label=\"Allergy Name\"\n                 type=\"text\"\n                 placeholder=\"Allergy Name\"\n                 value={allergyName}\n                onChange={(e) => setAllergyName(e.target.value)}\n                \n                 variant=\"outlined\"\n                 \n               />\n                    <br/>\n \n                    <TextField\n                 className=\"textfield\"\n                \n                 type=\"text\"\n                 \n             \n                 label=\"Risk\"\n                value={risk}\n                onChange={(e)=> setRisk(e.target.value)}\n            \n                 variant=\"outlined\"\n                 \n               />\n                    <br/>\n               \n             \n               \n \n               <TextField\n                     className=\"textfield\"\n                     label=\"Patient ID\"\n                     type=\"number\"\n                     placeholder=\"Patient ID\"\n                     value={patientId}\n                onChange={(e)=> setPatientId(e.target.value)}\n                   \n                     variant=\"outlined\"\n                    \n                    \n              />\n<br/>\n<FormGroup >\n<TextField \n                 className=\"textfield2\"\n                \n                 type=\"number\"\n                 placeholder=\"Notes\"\n                 label=\"Notes\"\n                  multiline\n                rows={5}\n                value={notes}\n                \n                onChange={(e)=> setNotes(e.target.value)}\n          \n                 variant=\"outlined\"\n                \n              \n     />\n     </FormGroup>\n           \n\n               </FormGroup>\n               <br/>\n \n \n         <Grid className=\"patientButtons\">\n               <ButtonGroup variant=\"outlined\"  className=\"smallButton\">\n               <Button\n                 color=\"primary\"\n                 variant=\"contained\"\n                 className=\"smallButton\"\n                 onClick={createPatient}\n               \n                 style={{backgroundcolor: \"red\"}}\n                 \n              \n               >\n                 Save Allergy\n               </Button>\n        \n \n               <Button\n                 color=\"secondary\"\n                 variant=\"contained\"\n                 className=\"smallButton\"\n                 onClick={handleClearForm}\n              \n                \n                 \n               >\n                 Clear Form\n               </Button>\n \n \n \n               <GreenButton\n              variant='contained'\n               color='secondary'\n               onClick={updateAllergy}\n         \n              \n               >Update Allergy &#128233</GreenButton>\n \n &#128229;&#10006;\n \n \n          </ButtonGroup>\n          </Grid>\n        \n       \n     </FormControl>\n \n     \n \n         </Box>\n      \n     </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/adamfoody/mwa/incase-break/incasebreak,new/client/my-app/src/PatientTable.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport { Grid, TableContainer, Button, Table, Paper, TableHead, TableRow, TableCell, TableBody, makeStyles, ButtonGroup } from '@material-ui/core';\nimport Swal from 'sweetalert2';\nimport { withStyles } from '@material-ui/core/styles';\nimport { green, yellow } from '@material-ui/core/colors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GreenButton = withStyles(theme => ({\n  root: {\n    color: theme.palette.getContrastText(green[500]),\n    backgroundColor: green[500],\n    '&:hover': {\n      backgroundColor: green[700]\n    },\n    color: yellow\n  }\n}))(Button);\nconst useStyles = makeStyles(theme => ({\n  tableHead: {\n    borderBottomStyle: \"solid\",\n    borderBottomColor: \"blue\"\n  },\n  stickyHeader: {}\n}));\nexport default function PatientTable() {\n  _s();\n\n  const classes = useStyles();\n  const [patients, setPatients] = useState([]);\n  const [displayPatients, setDisplayPatients] = useState(true); // will be used to render the treatment by id for the patient tables \n\n  const [treatmentsById, setTreatmentsById] = useState([]);\n  const [displayTreatmentForPatient, setDisplayTreatmentForPatient] = useState(false);\n  const [displayAllergyForPatient, setDisplayAllergyForPatient] = useState(false);\n  const [allergyById, setAllergyById] = useState(\"\");\n\n  function fetchPatientRecords() {\n    axios.get('http://localhost:8081/patient').then(response => {\n      // handle success\n      setPatients(response.data);\n      let data = JSON.stringify(response.data);\n    });\n  }\n\n  function deletePatient(patient1) {\n    axios.delete(`http://localhost:8081/deletePatient/${patient1}`).then(response => {\n      // handle success\n      var resData = response.data;\n      let data = JSON.stringify(resData);\n      Swal.fire({\n        icon: 'error',\n        title: \"Deleted Patient\"\n      });\n    });\n    fetchPatientRecords();\n  }\n\n  function deletePatientHandler() {\n    deletePatient();\n  }\n\n  const closeTreatments = () => {\n    setDisplayTreatmentForPatient(false);\n  };\n\n  const closeAllergy = () => {\n    setDisplayAllergyForPatient(false);\n  };\n\n  function fetchTreatmentRecordsById(patientId1) {\n    axios.get(`http://localhost:8081/treatmentbyid/${patientId1}`).then(response => {\n      // handle success\n      setTreatmentsById(response.data);\n      setDisplayTreatmentForPatient(true);\n      Swal.fire({\n        icon: 'info',\n        title: 'Scroll down for Treatment Result.'\n      });\n    });\n  }\n\n  function fetchAllergyRecordsById(patientId1) {\n    axios.get(`http://localhost:8081/allergybyid/${patientId1}`).then(response => {\n      // handle success\n      setAllergyById(response.data);\n      setDisplayAllergyForPatient(true);\n      Swal.fire({\n        icon: 'info',\n        title: 'Scroll down for Allergy Result.!'\n      });\n    });\n  } // useEffect with an empty array at the end. This means it will be called just once when the component is mounted. \n\n\n  useEffect(() => {\n    fetchPatientRecords();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"patientTable\",\n    children: [/*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"text-align-center\",\n      children: displayPatients == true && /*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        className: classes.tableContainer,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          stickyHeader: true,\n          sx: {\n            minWidth: 650\n          },\n          \"aria-label\": \"simple table\",\n          variant: \"contained\",\n          children: [/*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \" Full Name \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 24\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Patient ID \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 39\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \" DOB\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 38\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \" Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 38\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \" Email \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 38\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \" Allergy \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 38\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \" Gender \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 38\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \" View Treatment \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 38\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \" Delete Patient\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 38\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: patients.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n              sx: {\n                '&:last-child td, &:last-child th': {\n                  border: 0\n                }\n              },\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                component: \"th\",\n                scope: \"row\",\n                children: row.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: row.patientId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: row.dob\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: row.address\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: row.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 15\n              }, this), row.allergy == 0 && /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: \" None \\u274C \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 17\n              }, this), row.allergy == 1 && /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                className: \"hasAllergy\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  size: \"small\",\n                  align: \"right\",\n                  className: \"smallButton\",\n                  variant: \"outlined\",\n                  color: \"secondary\",\n                  onClick: () => {\n                    fetchAllergyRecordsById(row.patientId);\n                  },\n                  children: \"Allergy\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: [\" \", row.gender, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  justifyContent: \"flex-end\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    size: \"small\",\n                    className: \"smallButton\",\n                    color: \"primary\",\n                    variant: \"outlined\",\n                    onClick: () => {\n                      fetchTreatmentRecordsById(row.patientId);\n                    },\n                    children: \"View\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 218,\n                    columnNumber: 17\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  size: \"small\",\n                  className: \"smallButton\",\n                  color: \"secondary\",\n                  variant: \"outlined\",\n                  onClick: () => {\n                    deletePatient(row.patientId);\n                  },\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 17\n              }, this)]\n            }, row.patientId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 13\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [displayTreatmentForPatient == true && /*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        className: classes.tableContainer,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          stickyHeader: true,\n          sx: {\n            minWidth: 650\n          },\n          \"aria-label\": \"simple table\",\n          variant: \"outlined\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              style: {\n                borderBottom: \"2px solid #3f51b5\",\n                borderTop: \"2px solid #3f51b5\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                align: \"right\",\n                color: \"secondary\",\n                variant: \"contained\",\n                \"align-self\": \"right\",\n                size: \"small\",\n                onClick: closeTreatments,\n                children: [\"Close Treatment ID: \", treatmentsById.patientId]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \" Treatment ID\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 321,\n                  columnNumber: 24\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \" Patient ID\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 322,\n                  columnNumber: 24\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 323,\n                  columnNumber: 26\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \" Category\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 324,\n                  columnNumber: 25\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \" Start Date \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 325,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \" Prescription\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 326,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              sx: {\n                '&:last-child td, &:last-child th': {\n                  border: 0\n                }\n              },\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                component: \"th\",\n                scope: \"row\",\n                children: treatmentsById.treatmentId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: treatmentsById.patientId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: treatmentsById.treatmentType\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: treatmentsById.treatmentCategory\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: treatmentsById.startDate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 15\n              }, this), treatmentsById.prescription == 0 && /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"None \\u274C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 17\n              }, this), treatmentsById.prescription == 1 && /*#__PURE__*/_jsxDEV(TableCell, {\n                className: \"hasPrescription\",\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \" Prescription \\u2714 \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 349,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 17\n              }, this)]\n            }, treatmentsById.treatmentId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this), displayAllergyForPatient === true && /*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        className: classes.tableContainer,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          stickyHeader: true,\n          sx: {\n            minWidth: 650\n          },\n          \"aria-label\": \"simple table\",\n          variant: \"outlined\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              style: {\n                borderBottom: \"2px solid #3f51b5\",\n                borderTop: \"2px solid #3f51b5\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                align: \"right\",\n                color: \"secondary\",\n                variant: \"contained\",\n                \"align-self\": \"right\",\n                size: \"small\",\n                onClick: closeAllergy,\n                children: [\"Close Allergy ID: \", allergyById.allergyId]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 394,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \" Allergy ID\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 413,\n                  columnNumber: 33\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 413,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \" Allergy Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 414,\n                  columnNumber: 33\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 414,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \" Risk \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 416,\n                  columnNumber: 33\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 416,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"\",\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Patient ID\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 417,\n                  columnNumber: 34\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 417,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"\",\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \" Notes \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 418,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              sx: {\n                '&:last-child td, &:last-child th': {\n                  border: 0\n                }\n              },\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                component: \"th\",\n                scope: \"row\",\n                children: allergyById.allergyId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 429,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: allergyById.allergyName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 431,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: allergyById.risk\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 432,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: allergyById.patientId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 433,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: allergyById.notes\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 434,\n                columnNumber: 15\n              }, this)]\n            }, allergyById.allergyId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PatientTable, \"HPYxGuYTksd5juCPdHT63Waizpg=\", false, function () {\n  return [useStyles];\n});\n\n_c = PatientTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"PatientTable\");","map":{"version":3,"sources":["/Users/adamfoody/mwa/incase-break/incasebreak,new/client/my-app/src/PatientTable.js"],"names":["React","useState","useEffect","axios","Grid","TableContainer","Button","Table","Paper","TableHead","TableRow","TableCell","TableBody","makeStyles","ButtonGroup","Swal","withStyles","green","yellow","GreenButton","theme","root","color","palette","getContrastText","backgroundColor","useStyles","tableHead","borderBottomStyle","borderBottomColor","stickyHeader","PatientTable","classes","patients","setPatients","displayPatients","setDisplayPatients","treatmentsById","setTreatmentsById","displayTreatmentForPatient","setDisplayTreatmentForPatient","displayAllergyForPatient","setDisplayAllergyForPatient","allergyById","setAllergyById","fetchPatientRecords","get","then","response","data","JSON","stringify","deletePatient","patient1","delete","resData","fire","icon","title","deletePatientHandler","closeTreatments","closeAllergy","fetchTreatmentRecordsById","patientId1","fetchAllergyRecordsById","tableContainer","minWidth","map","row","border","name","patientId","dob","address","email","allergy","gender","borderBottom","borderTop","treatmentId","treatmentType","treatmentCategory","startDate","prescription","allergyId","allergyName","risk","notes"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport React , {useState, useEffect} from \"react\"\nimport axios from 'axios';\nimport {Grid, TableContainer, Button, Table, Paper, TableHead, TableRow, TableCell, TableBody, makeStyles, ButtonGroup} from '@material-ui/core';\nimport Swal from 'sweetalert2';\nimport { withStyles } from '@material-ui/core/styles'\nimport { green, yellow} from '@material-ui/core/colors'\n\n\nconst GreenButton = withStyles((theme) => ({\n  root: {\n    color: theme.palette.getContrastText(green[500]),\n    backgroundColor: green[500],\n    '&:hover': {\n      backgroundColor: green[700]\n    },\n    color: yellow\n  }\n}))(Button)\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    tableHead: {\n        borderBottomStyle: \"solid\",\n        borderBottomColor: \"blue\"\n    },\n    stickyHeader:{\n      \n    }\n}));\n\n\n\n\nexport default function PatientTable() {\n\n    const classes = useStyles();\n\n    const [patients, setPatients] = useState([]);\n    const [displayPatients, setDisplayPatients] = useState(true);\n\n    // will be used to render the treatment by id for the patient tables \n    const [treatmentsById, setTreatmentsById] = useState([]);\n    const [displayTreatmentForPatient, setDisplayTreatmentForPatient] = useState(false);\n\n    const [displayAllergyForPatient, setDisplayAllergyForPatient] = useState(false);\n    const [allergyById, setAllergyById] = useState(\"\");\n\n    function fetchPatientRecords() {\n        axios.get('http://localhost:8081/patient').then((response) => {\n          // handle success\n          setPatients(response.data);\n          let data = JSON.stringify(response.data);\n         \n\n          \n         \n        });\n      }\n\n      function deletePatient(patient1) {\n        axios\n          .delete(`http://localhost:8081/deletePatient/${patient1}`)\n          .then((response) => {\n            // handle success\n            var resData = response.data;\n            let data = JSON.stringify(resData);\n            Swal.fire({\n              icon: 'error',\n              title: \"Deleted Patient\"\n            \n             \n            });\n          });\n          fetchPatientRecords();\n      }\n\n\n      function deletePatientHandler() {\n        deletePatient();\n   \n        \n      }\n\n      const closeTreatments = () => {\n        setDisplayTreatmentForPatient(false);\n\n\n      }\n\n      const closeAllergy = () => {\n        setDisplayAllergyForPatient(false);\n\n\n      }\n\n      \n          \n      \n\n      function fetchTreatmentRecordsById(patientId1) {\n        axios\n          .get(`http://localhost:8081/treatmentbyid/${patientId1}`)\n          .then((response) => {\n            // handle success\n            setTreatmentsById(response.data);\n            setDisplayTreatmentForPatient(true);\n            Swal.fire({\n              icon: 'info',\n              title: 'Scroll down for Treatment Result.',\n           \n            })\n            \n            \n           \n          });\n      }\n\n      function fetchAllergyRecordsById(patientId1) {\n        axios\n          .get(`http://localhost:8081/allergybyid/${patientId1}`)\n          .then((response) => {\n            // handle success\n            setAllergyById(response.data);\n            setDisplayAllergyForPatient(true);\n\n            Swal.fire({\n              icon: 'info',\n              title: 'Scroll down for Allergy Result.!',\n           \n            })\n            \n            \n           \n          });\n      }\n\n    // useEffect with an empty array at the end. This means it will be called just once when the component is mounted. \n\n    useEffect(() => {\n        fetchPatientRecords();\n      }, []);\n   \n\n          \n          \n    return (     \n    \n\n\n\n        <div className=\"patientTable\">\n        <main className=\"text-align-center\">\n      \n        {  displayPatients == true && (\n\n\n          \n            <TableContainer component={Paper} className={classes.tableContainer}>\n            \n\n            <Table stickyHeader sx={{ minWidth: 650 }} aria-label=\"simple table\" variant=\"contained\" >\n    \n\n\n      \n          <TableRow >\n      \n            <TableCell><strong> Full Name </strong> </TableCell>\n            <TableCell align=\"right\"> <strong>Patient ID </strong></TableCell>\n            <TableCell align=\"right\"><strong> DOB</strong> </TableCell>\n            <TableCell align=\"right\"><strong> Address</strong></TableCell>\n            <TableCell align=\"right\"><strong> Email </strong></TableCell>\n            <TableCell align=\"right\"><strong> Allergy </strong></TableCell>\n            <TableCell align=\"right\"><strong> Gender </strong></TableCell>\n            <TableCell align=\"right\"><strong> View Treatment </strong> </TableCell>\n            <TableCell align=\"right\"><strong> Delete Patient</strong></TableCell>\n          </TableRow>\n    \n        <TableBody>\n          {patients.map((row) => (\n            <TableRow\n              key={row.patientId}\n              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n            >\n              <TableCell component=\"th\" scope=\"row\">\n                {row.name}\n              </TableCell>\n              <TableCell align=\"right\">{row.patientId}</TableCell>\n              <TableCell align=\"right\">{row.dob}</TableCell>\n              <TableCell align=\"right\">{row.address}</TableCell>\n              <TableCell align=\"right\">{row.email}</TableCell>\n\n                {row.allergy == 0 && (\n                <TableCell align=\"right\"> None &#x274C; </TableCell>\n                )}\n                {row.allergy == 1 && (\n                <TableCell align=\"right\" className=\"hasAllergy\"> \n                <Button\n                size=\"small\"\n                 align=\"right\"\n                 className=\"smallButton\"\n                 variant=\"outlined\"\n                 color=\"secondary\"\n                 onClick={() => {\n                    fetchAllergyRecordsById(row.patientId);\n                  }}\n                >\n                Allergy\n                \n                 </Button>\n                </TableCell>\n                )}\n                <TableCell align=\"right\"> {row.gender} </TableCell>\n                <TableCell align=\"right\"> \n              <Grid container justifyContent=\"flex-end\">\n                <Button\n                 size=\"small\"\n                  className=\"smallButton\"\n                  color=\"primary\"\n                  variant=\"outlined\"\n                  onClick={() => {\n                    fetchTreatmentRecordsById(row.patientId);\n                  }}\n                >\n                \n                  View\n                </Button>\n                </Grid>\n\n                </TableCell>\n\n\n                <TableCell align=\"right\">\n                  \n\n                <Button\n              \n            \n                 size=\"small\"\n                  className=\"smallButton\"\n                  color=\"secondary\"\n                  variant=\"outlined\"\n                  onClick={() => {\n                    deletePatient(row.patientId);\n                  }}\n                 \n                >\n              \n                  Delete\n                </Button>\n                \n                  \n                </TableCell>\n                \n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n  \n\n\n\n\n            </TableContainer>\n\n      \n  \n          \n            \n        )}\n     \n      \n        </main>\n\n        <main>\n\n                  \n\n\n\n        </main>\n        \n        <main>\n\n        {displayTreatmentForPatient == true && (\n\n        <TableContainer component={Paper} className={classes.tableContainer}>\n            \n\n            <Table stickyHeader sx={{ minWidth: 650 }} aria-label=\"simple table\" variant=\"outlined\" >\n        <TableHead >\n        <TableCell\n                style={{\n                    borderBottom: \"2px solid #3f51b5\", borderTop: \"2px solid #3f51b5\"\n                    \n                    \n                }}\n\n\n            >   \n                  <Button\n                    align=\"right\"\n                  color=\"secondary\"\n                  variant=\"contained\"\n                  align-self=\"right\"\n                  size=\"small\"\n                  onClick={closeTreatments}\n               \n                >\n                 \n                \n               Close Treatment ID: {treatmentsById.patientId}\n                </Button>\n           \n            </TableCell>\n      \n          <TableRow >\n      \n            <TableCell><strong> Treatment ID</strong> </TableCell>\n            <TableCell><strong> Patient ID</strong> </TableCell>\n            <TableCell > <strong>Type</strong></TableCell>\n            <TableCell ><strong> Category</strong> </TableCell>\n            <TableCell ><strong> Start Date </strong></TableCell>\n            <TableCell ><strong> Prescription</strong></TableCell>\n         \n          </TableRow>\n        </TableHead>\n        <TableBody>\n    \n            <TableRow\n              key={treatmentsById.treatmentId}\n              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n            >\n              <TableCell component=\"th\" scope=\"row\">\n                {treatmentsById.treatmentId}\n              </TableCell>\n              <TableCell >{treatmentsById.patientId}</TableCell>\n              <TableCell >{treatmentsById.treatmentType}</TableCell>\n              <TableCell >{treatmentsById.treatmentCategory}</TableCell>\n              <TableCell >{treatmentsById.startDate}</TableCell>\n\n                {treatmentsById.prescription == 0 && (\n                <TableCell >None &#10060;</TableCell>\n                )}\n                {treatmentsById.prescription == 1 && (\n                <TableCell  className=\"hasPrescription\"> \n                <strong> Prescription &#10004; </strong> \n                </TableCell>\n                )}\n                <TableCell> \n                    \n\n                </TableCell>\n\n\n            </TableRow>\n        \n        </TableBody>\n      </Table>\n  \n\n\n\n\n            </TableContainer>\n            \n\n            )}\n\n            {displayAllergyForPatient === true && (\n\n\n\n\n\n\n\n            <TableContainer component={Paper} className={classes.tableContainer}>\n            \n\n            <Table stickyHeader sx={{ minWidth: 650 }} aria-label=\"simple table\" variant=\"outlined\" >\n        <TableHead >\n        <TableCell\n                style={{\n                    borderBottom: \"2px solid #3f51b5\", borderTop: \"2px solid #3f51b5\"\n                    \n                    \n                }}\n\n\n            >   \n                  <Button\n                    align=\"right\"\n                  color=\"secondary\"\n                  variant=\"contained\"\n                  align-self=\"right\"\n                  size=\"small\"\n                  onClick={closeAllergy}\n                 \n               \n                >\n                 \n                \n               Close Allergy ID: {allergyById.allergyId}\n                </Button>\n           \n            </TableCell>\n      \n          <TableRow >\n      \n            <TableCell align=\"\"><strong> Allergy ID</strong> </TableCell>\n            <TableCell align=\"\"><strong> Allergy Name</strong> </TableCell>\n          \n            <TableCell align=\"\"><strong> Risk </strong> </TableCell>\n            <TableCell align=\"\"> <strong>Patient ID</strong></TableCell>\n            <TableCell align=\"\"><strong> Notes </strong></TableCell>\n        \n         \n          </TableRow>\n        </TableHead>\n        <TableBody>\n    \n            <TableRow\n              key={allergyById.allergyId}\n              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n            >\n              <TableCell component=\"th\" scope=\"row\">\n                {allergyById.allergyId}</TableCell>\n              <TableCell >{allergyById.allergyName}</TableCell>\n              <TableCell >{allergyById.risk}</TableCell>\n              <TableCell >{allergyById.patientId}</TableCell>\n              <TableCell >{allergyById.notes}</TableCell>\n\n              \n               \n\n            </TableRow>\n        \n        </TableBody>\n      </Table>\n  \n\n\n\n\n            </TableContainer>\n            )}\n            \n\n        </main>\n                           \n\n        </div>\n    )\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}
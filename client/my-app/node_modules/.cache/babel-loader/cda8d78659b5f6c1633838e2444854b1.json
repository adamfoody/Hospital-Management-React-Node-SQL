{"ast":null,"code":"var _jsxFileName = \"/Users/adamfoody/mwa/A2.2/client/my-app/src/PatientTable.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport { Grid, TableContainer, Button, Table, Paper, TableHead, TableRow, TableCell, TableBody, makeStyles, ButtonGroup } from '@material-ui/core';\nimport Swal from 'sweetalert2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  tableHead: {\n    borderBottomStyle: \"solid\",\n    borderBottomColor: \"blue\"\n  },\n  stickyHeader: {}\n}));\nexport default function PatientTable() {\n  _s();\n\n  const classes = useStyles();\n  const [patients, setPatients] = useState([]);\n  const [displayPatients, setDisplayPatients] = useState(true); // will be used to render the treatment by id for the patient tables \n\n  const [treatmentsById, setTreatmentsById] = useState([]);\n  const [displayTreatmentForPatient, setDisplayTreatmentForPatient] = useState(false);\n\n  function fetchPatientRecords() {\n    axios.get('http://localhost:8081/patient').then(response => {\n      // handle success\n      setPatients(response.data);\n    });\n  }\n\n  function deletePatient(patient1) {\n    axios.delete(`http://localhost:8081/deletePatient/${patient1}`).then(response => {\n      // handle success\n      var resData = response.data;\n      let data = JSON.stringify(resData);\n      Swal.fire({\n        icon: 'error',\n        title: \"Deleted Patient\"\n      });\n    });\n  }\n\n  function deletePatientHandler() {\n    deletePatient();\n  }\n\n  const closeTreatments = () => {\n    setDisplayTreatmentForPatient(false);\n  };\n\n  function fetchTreatmentRecordsById(treatmentId1) {\n    axios.get(`http://localhost:8081/treatmentId/${treatmentId1}`).then(response => {\n      // handle success\n      setTreatmentsById(response.data);\n      setDisplayTreatmentForPatient(true);\n      Swal.fire({\n        icon: 'info',\n        title: 'Scroll down to see Patients treatments!'\n      });\n    });\n  } // useEffect with an empty array at the end. This means it will be called just once when the component is mounted. \n\n\n  useEffect(() => {\n    fetchPatientRecords();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"text-align-center\",\n      children: displayPatients == true && /*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        className: classes.tableContainer,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          stickyHeader: true,\n          sx: {\n            minWidth: 650\n          },\n          \"aria-label\": \"simple table\",\n          variant: \"outlined\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              style: {\n                borderBottom: \"2px solid #3f51b5\",\n                borderTop: \"2px solid #3f51b5\",\n                color: \"#3f51b5\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Patient Table (Add Icon)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 21\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 16\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \" Full Name \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 24\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Patient ID \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 39\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \" DOB\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 38\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \" Address\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 38\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \" Treatment ID\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 38\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \" Allergy \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 38\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \" View Treatment \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 38\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \" Delete Patient\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 38\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: patients.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n              sx: {\n                '&:last-child td, &:last-child th': {\n                  border: 0\n                }\n              },\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                component: \"th\",\n                scope: \"row\",\n                children: row.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: row.patientId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: row.dob\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: row.address\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: row.treatmentId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 15\n              }, this), row.allergy == 0 && /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: \"PATIENT HAS NO ALLERGY!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 17\n              }, this), row.allergy == 1 && /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                className: \"hasAllergy\",\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \" PATIENT HAS ALLERGY! \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  justifyContent: \"flex-end\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    className: \"smallButton\",\n                    color: \"primary\",\n                    variant: \"contained\",\n                    onClick: () => {\n                      fetchTreatmentRecordsById(row.treatmentId);\n                    },\n                    children: \"View Treatment\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 161,\n                    columnNumber: 17\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"smallButton\",\n                  color: \"secondary\",\n                  variant: \"contained\",\n                  onClick: () => {\n                    deletePatient(row.patientId);\n                  },\n                  children: \"Delete Patient\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 17\n              }, this)]\n            }, row.patientId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 13\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: displayTreatmentForPatient == true && /*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        className: classes.tableContainer,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          stickyHeader: true,\n          sx: {\n            minWidth: 650\n          },\n          \"aria-label\": \"simple table\",\n          variant: \"outlined\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              style: {\n                borderBottom: \"2px solid #3f51b5\",\n                borderTop: \"2px solid #3f51b5\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                align: \"right\",\n                color: \"secondary\",\n                variant: \"contained\",\n                \"align-self\": \"right\",\n                onClick: closeTreatments,\n                children: [\"Close Treatment ID: \", treatmentsById.treatmentId]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \" Treatment ID\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 24\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 39\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \" Category\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 38\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \" Start Date \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 38\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \" Prescription\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 265,\n                  columnNumber: 38\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              sx: {\n                '&:last-child td, &:last-child th': {\n                  border: 0\n                }\n              },\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                component: \"th\",\n                scope: \"row\",\n                children: treatmentsById.treatmentId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: treatmentsById.treatmentType\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: treatmentsById.treatmentCategory\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: treatmentsById.startDate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 15\n              }, this), treatmentsById.prescription == 0 && /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: \"NO PRESCIPTION!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 17\n              }, this), treatmentsById.prescription == 1 && /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                className: \"hasPrescription\",\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \" PRESCRIPTION \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 17\n              }, this)]\n            }, treatmentsById.treatmentId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 9\n  }, this);\n}\n/*thoughts, why not call fetchPatientRecords in a function in the return statement, then after render the table. \nThis way we call the function and setPatients = \n\n\n\n*/\n\n_s(PatientTable, \"/f+wXkxVlKXbrOznf7NEWAmBqVk=\", false, function () {\n  return [useStyles];\n});\n\n_c = PatientTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"PatientTable\");","map":{"version":3,"sources":["/Users/adamfoody/mwa/A2.2/client/my-app/src/PatientTable.js"],"names":["React","useState","useEffect","axios","Grid","TableContainer","Button","Table","Paper","TableHead","TableRow","TableCell","TableBody","makeStyles","ButtonGroup","Swal","useStyles","theme","tableHead","borderBottomStyle","borderBottomColor","stickyHeader","PatientTable","classes","patients","setPatients","displayPatients","setDisplayPatients","treatmentsById","setTreatmentsById","displayTreatmentForPatient","setDisplayTreatmentForPatient","fetchPatientRecords","get","then","response","data","deletePatient","patient1","delete","resData","JSON","stringify","fire","icon","title","deletePatientHandler","closeTreatments","fetchTreatmentRecordsById","treatmentId1","tableContainer","minWidth","borderBottom","borderTop","color","map","row","border","name","patientId","dob","address","treatmentId","allergy","treatmentType","treatmentCategory","startDate","prescription"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport React , {useState, useEffect} from \"react\"\nimport axios from 'axios';\nimport {Grid, TableContainer, Button, Table, Paper, TableHead, TableRow, TableCell, TableBody, makeStyles, ButtonGroup} from '@material-ui/core';\nimport Swal from 'sweetalert2';\n\nconst useStyles = makeStyles((theme) => ({\n    tableHead: {\n        borderBottomStyle: \"solid\",\n        borderBottomColor: \"blue\"\n    },\n    stickyHeader:{\n      \n    }\n}));\n\n\n\n\nexport default function PatientTable() {\n\n    const classes = useStyles();\n\n    const [patients, setPatients] = useState([]);\n    const [displayPatients, setDisplayPatients] = useState(true);\n\n    // will be used to render the treatment by id for the patient tables \n    const [treatmentsById, setTreatmentsById] = useState([]);\n    const [displayTreatmentForPatient, setDisplayTreatmentForPatient] = useState(false);\n\n    function fetchPatientRecords() {\n        axios.get('http://localhost:8081/patient').then((response) => {\n          // handle success\n          setPatients(response.data);\n         \n        });\n      }\n\n      function deletePatient(patient1) {\n        axios\n          .delete(`http://localhost:8081/deletePatient/${patient1}`)\n          .then((response) => {\n            // handle success\n            var resData = response.data;\n            let data = JSON.stringify(resData);\n            Swal.fire({\n              icon: 'error',\n              title: \"Deleted Patient\"\n            \n             \n            });\n          });\n      }\n\n\n      function deletePatientHandler() {\n        deletePatient();\n   \n        \n      }\n\n      const closeTreatments = () => {\n        setDisplayTreatmentForPatient(false);\n\n\n      }\n          \n      \n\n      function fetchTreatmentRecordsById(treatmentId1) {\n        axios\n          .get(`http://localhost:8081/treatmentId/${treatmentId1}`)\n          .then((response) => {\n            // handle success\n            setTreatmentsById(response.data);\n            setDisplayTreatmentForPatient(true);\n            Swal.fire({\n              icon: 'info',\n              title: 'Scroll down to see Patients treatments!',\n           \n            })\n            \n           \n          });\n      }\n\n    // useEffect with an empty array at the end. This means it will be called just once when the component is mounted. \n\n    useEffect(() => {\n        fetchPatientRecords();\n      }, []);\n   \n\n          \n          \n    return (     \n    \n\n\n\n        <div>\n        <main className=\"text-align-center\">\n      \n        {  displayPatients == true && (\n\n\n          \n            <TableContainer component={Paper} className={classes.tableContainer}>\n            \n\n            <Table stickyHeader sx={{ minWidth: 650 }} aria-label=\"simple table\" variant=\"outlined\" >\n        <TableHead >\n        <TableCell\n                style={{\n                    borderBottom: \"2px solid #3f51b5\", borderTop: \"2px solid #3f51b5\", color:\"#3f51b5\"\n                    \n                    \n                }}\n\n\n            >\n               <h3> <strong>Patient Table (Add Icon)</strong> </h3>\n            </TableCell>\n      \n          <TableRow >\n      \n            <TableCell><strong> Full Name </strong> </TableCell>\n            <TableCell align=\"right\"> <strong>Patient ID </strong></TableCell>\n            <TableCell align=\"right\"><strong> DOB</strong> </TableCell>\n            <TableCell align=\"right\"><strong> Address</strong></TableCell>\n            <TableCell align=\"right\"><strong> Treatment ID</strong></TableCell>\n            <TableCell align=\"right\"><strong> Allergy </strong></TableCell>\n            <TableCell align=\"right\"><strong> View Treatment </strong> </TableCell>\n            <TableCell align=\"right\"><strong> Delete Patient</strong></TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {patients.map((row) => (\n            <TableRow\n              key={row.patientId}\n              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n            >\n              <TableCell component=\"th\" scope=\"row\">\n                {row.name}\n              </TableCell>\n              <TableCell align=\"right\">{row.patientId}</TableCell>\n              <TableCell align=\"right\">{row.dob}</TableCell>\n              <TableCell align=\"right\">{row.address}</TableCell>\n              <TableCell align=\"right\">{row.treatmentId}</TableCell>\n\n                {row.allergy == 0 && (\n                <TableCell align=\"right\">PATIENT HAS NO ALLERGY!</TableCell>\n                )}\n                {row.allergy == 1 && (\n                <TableCell align=\"right\" className=\"hasAllergy\"> \n                <strong> PATIENT HAS ALLERGY! </strong> \n                </TableCell>\n                )}\n                <TableCell> \n              <Grid container justifyContent=\"flex-end\">\n                <Button\n                  className=\"smallButton\"\n                  color=\"primary\"\n                  variant=\"contained\"\n                  onClick={() => {\n                    fetchTreatmentRecordsById(row.treatmentId);\n                  }}\n                >\n                 \n                \n               \n                  View Treatment\n                </Button>\n                </Grid>\n\n                </TableCell>\n\n\n                <TableCell>\n                  \n\n                <Button\n                  className=\"smallButton\"\n                  color=\"secondary\"\n                  variant=\"contained\"\n                  onClick={() => {\n                    deletePatient(row.patientId);\n                  }}\n                 \n                >\n              \n                  Delete Patient\n                </Button>\n                \n                  \n                </TableCell>\n                \n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n  \n\n\n\n\n            </TableContainer>\n\n      \n  \n          \n            \n        )}\n     \n      \n        </main>\n\n        <main>\n\n                  \n\n\n\n        </main>\n        \n        <main>\n\n        {displayTreatmentForPatient == true && (\n\n        <TableContainer component={Paper} className={classes.tableContainer}>\n            \n\n            <Table stickyHeader sx={{ minWidth: 650 }} aria-label=\"simple table\" variant=\"outlined\" >\n        <TableHead >\n        <TableCell\n                style={{\n                    borderBottom: \"2px solid #3f51b5\", borderTop: \"2px solid #3f51b5\"\n                    \n                    \n                }}\n\n\n            >   \n                  <Button\n                    align=\"right\"\n                  color=\"secondary\"\n                  variant=\"contained\"\n                  align-self=\"right\"\n                  onClick={closeTreatments}\n               \n                >\n                 \n                \n               Close Treatment ID: {treatmentsById.treatmentId}\n                </Button>\n           \n            </TableCell>\n      \n          <TableRow >\n      \n            <TableCell><strong> Treatment ID</strong> </TableCell>\n            <TableCell align=\"right\"> <strong>Type</strong></TableCell>\n            <TableCell align=\"right\"><strong> Category</strong> </TableCell>\n            <TableCell align=\"right\"><strong> Start Date </strong></TableCell>\n            <TableCell align=\"right\"><strong> Prescription</strong></TableCell>\n         \n          </TableRow>\n        </TableHead>\n        <TableBody>\n    \n            <TableRow\n              key={treatmentsById.treatmentId}\n              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n            >\n              <TableCell component=\"th\" scope=\"row\">\n                {treatmentsById.treatmentId}\n              </TableCell>\n              \n              <TableCell align=\"right\">{treatmentsById.treatmentType}</TableCell>\n              <TableCell align=\"right\">{treatmentsById.treatmentCategory}</TableCell>\n              <TableCell align=\"right\">{treatmentsById.startDate}</TableCell>\n\n                {treatmentsById.prescription == 0 && (\n                <TableCell align=\"right\">NO PRESCIPTION!</TableCell>\n                )}\n                {treatmentsById.prescription == 1 && (\n                <TableCell align=\"right\" className=\"hasPrescription\"> \n                <strong> PRESCRIPTION </strong> \n                </TableCell>\n                )}\n                <TableCell> \n                    \n\n                </TableCell>\n\n\n            </TableRow>\n        \n        </TableBody>\n      </Table>\n  \n\n\n\n\n            </TableContainer>\n            \n\n            )}\n            \n\n        </main>\n                           \n\n        </div>\n    )\n}\n\n/*thoughts, why not call fetchPatientRecords in a function in the return statement, then after render the table. \nThis way we call the function and setPatients = \n\n\n\n*/\n\n\n"]},"metadata":{},"sourceType":"module"}
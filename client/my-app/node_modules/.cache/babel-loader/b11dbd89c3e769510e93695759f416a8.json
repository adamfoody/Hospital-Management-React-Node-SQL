{"ast":null,"code":"var _jsxFileName = \"/Users/adamfoody/mwa/A2.2/client/my-app/src/Patient.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { FormControl, TextField, makeStyles, FormLabel, Grid, Button, ButtonGroup, Box, Radio, RadioGroup, FormGroup, FormControlLabel, Container, InputLabel, MenuItem, Select, Icon } from '@material-ui/core';\nimport './App.css';\nimport { green, orange, yellow } from '@material-ui/core/colors';\nimport Swal from 'sweetalert2';\nimport { withRouter, useHistory } from \"react-router-dom\";\nimport { withStyles } from '@material-ui/core/styles'; //Created a green version of the MUI button component for update records. Using withStyles. \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GreenButton = withStyles(theme => ({\n  root: {\n    color: theme.palette.getContrastText(green[500]),\n    backgroundColor: green[500],\n    '&:hover': {\n      backgroundColor: green[700]\n    },\n    color: yellow\n  }\n}))(Button);\n_c = GreenButton;\nconst OrangeButton = withStyles(theme => ({\n  root: {\n    color: theme.palette.getContrastText(orange[500]),\n    backgroundColor: orange[500],\n    '&:hover': {\n      backgroundColor: orange[700]\n    },\n    color: yellow\n  }\n}))(Button);\n_c2 = OrangeButton;\n\nconst Patient = props => {\n  _s();\n\n  const [patientName, setPatientName] = useState();\n  const [dob, setDob] = useState('');\n  const [email, setEmail] = useState('');\n  const [patientId, setPatientId] = useState('');\n  const [address, setAddress] = useState('');\n  const [allergy, setAllergy] = useState('');\n  const [gender, setGender] = useState();\n  const [displayAllergy, setDisplayAllergy] = useState();\n\n  function updatePatient() {\n    const value = {\n      name: patientName,\n      dob: dob,\n      email: email,\n      patientId: patientId,\n      address: address,\n      allergy: allergy,\n      gender: gender\n    };\n    axios.put(`http://localhost:8081/updatePatient/${patientName}`, value).then(response => {\n      // handle success\n      var resData = response.data;\n      let data = JSON.stringify(resData);\n      Swal.fire({\n        icon: 'success',\n        title: 'Updated Patient!'\n      });\n      handleClearForm();\n    });\n  }\n\n  function savePatient() {\n    const value = {\n      name: patientName,\n      dob: dob,\n      email: email,\n      patientId: patientId,\n      address: address,\n      allergy: allergy,\n      gender: gender\n    };\n    axios.post('http://localhost:8081/patient/', value).then(response => {\n      // handle success\n      var resData = response.data;\n      Swal.fire({\n        icon: 'success',\n        title: 'New Patient saved!'\n      });\n      handleClearForm();\n    });\n  }\n\n  const handleSavePatient = () => {\n    savePatient();\n  };\n\n  const handleClearForm = () => {\n    setDob('');\n    setPatientId('');\n    setPatientName('');\n    setEmail('');\n    setAddress('');\n    setAllergy('');\n    setGender('');\n  };\n\n  const {\n    history\n  } = props;\n\n  const handleAlleryClick = pageURL => {\n    history.push(pageURL);\n    Swal.fire({\n      icon: 'success',\n      title: 'Updated Patient!'\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        className: \"forms\",\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          style: {\n            color: \"#3f51b5\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: /*#__PURE__*/_jsxDEV(\"u\", {\n                children: [\"  Create Patient\", gender, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 16\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 14\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          className: \"forms\",\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            className: \"textfield\",\n            type: \"text\",\n            placeholder: \"Full Name\",\n            alignItems: \"center\",\n            value: patientName,\n            onChange: e => setPatientName(e.target.value),\n            variant: \"outlined\",\n            label: \"Full Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            className: \"textfield\",\n            label: \"Date Of Birth\",\n            type: \"text\",\n            placeholder: \"Date of Birth\",\n            value: dob,\n            onChange: e => setDob(e.target.value),\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 20\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            className: \"textfield\",\n            type: \"text\",\n            label: \"Address\",\n            openTo: \"year\",\n            value: address,\n            onChange: e => setAddress(e.target.value),\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 20\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 20\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            className: \"textfield\",\n            type: \"number\",\n            placeholder: \"Email-address\",\n            label: \"Emaildress\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 18\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            className: \"textfield\",\n            label: \"Patient ID\",\n            type: \"number\",\n            placeholder: \"Patient ID\",\n            value: patientId,\n            onChange: e => setPatientId(e.target.value),\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              minWidth: 120\n            },\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                children: \"Allergy\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: allergy,\n                className: \"textfield\",\n                onChange: e => setAllergy(e.target.value),\n                variant: \"outlined\",\n                placeholder: \"allergy\",\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 1,\n                  children: \"Yes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 0,\n                  children: \"No\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 1\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          children: /*#__PURE__*/_jsxDEV(RadioGroup, {\n            row: true,\n            \"aria-label\": \"gender\",\n            defaultValue: \"male\",\n            value: gender,\n            name: \"radio-buttons-group\",\n            className: \"radioButton\",\n            onChange: e => setGender(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"female\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 51\n              }, this),\n              label: \"Female\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"male\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 49\n              }, this),\n              label: \"Male\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"other\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 50\n              }, this),\n              label: \"Other\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          className: \"patientButtons\",\n          children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n            variant: \"outlined\",\n            className: \"smallButton\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              color: \"primary\",\n              variant: \"contained\",\n              className: \"smallButton\",\n              onClick: handleSavePatient,\n              style: {\n                backgroundcolor: \"red\"\n              },\n              children: \"Save Patient\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              color: \"secondary\",\n              variant: \"contained\",\n              className: \"smallButton\",\n              onClick: handleClearForm,\n              children: \"Clear Form\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(GreenButton, {\n              variant: \"contained\",\n              color: \"secondary\",\n              onClick: updatePatient,\n              children: \"Update Patient\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(OrangeButton, {\n              variant: \"contained\",\n              color: \"secondary\",\n              onClick: () => handleAlleryClick('/allergy'),\n              children: \"Create Allergy\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 1\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 8\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Patient, \"yOqEfnQgTytgoie77nVmhaEyBlY=\");\n\n_c3 = Patient;\nexport default _c4 = withRouter(Patient); //https://www.youtube.com/watch?v=-XKaSCU0ZLM&t=2783s for notes and also to help with building\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"GreenButton\");\n$RefreshReg$(_c2, \"OrangeButton\");\n$RefreshReg$(_c3, \"Patient\");\n$RefreshReg$(_c4, \"%default%\");","map":{"version":3,"sources":["/Users/adamfoody/mwa/A2.2/client/my-app/src/Patient.js"],"names":["React","useState","axios","FormControl","TextField","makeStyles","FormLabel","Grid","Button","ButtonGroup","Box","Radio","RadioGroup","FormGroup","FormControlLabel","Container","InputLabel","MenuItem","Select","Icon","green","orange","yellow","Swal","withRouter","useHistory","withStyles","GreenButton","theme","root","color","palette","getContrastText","backgroundColor","OrangeButton","Patient","props","patientName","setPatientName","dob","setDob","email","setEmail","patientId","setPatientId","address","setAddress","allergy","setAllergy","gender","setGender","displayAllergy","setDisplayAllergy","updatePatient","value","name","put","then","response","resData","data","JSON","stringify","fire","icon","title","handleClearForm","savePatient","post","handleSavePatient","history","handleAlleryClick","pageURL","push","e","target","minWidth","backgroundcolor"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport axios from 'axios';\nimport {\n  FormControl,\n  TextField,\n  makeStyles,\n  FormLabel,\n  Grid,\n  Button,\n  ButtonGroup,\n  Box, Radio, RadioGroup, FormGroup,FormControlLabel\n, Container, InputLabel, MenuItem, Select,\nIcon} from '@material-ui/core';\nimport './App.css';\nimport { green, orange, yellow} from '@material-ui/core/colors'\nimport Swal from 'sweetalert2';\nimport { withRouter, useHistory}  from \"react-router-dom\";\n \nimport { withStyles } from '@material-ui/core/styles'\n\n//Created a green version of the MUI button component for update records. Using withStyles. \n\n\n\nconst GreenButton = withStyles((theme) => ({\n  root: {\n    color: theme.palette.getContrastText(green[500]),\n    backgroundColor: green[500],\n    '&:hover': {\n      backgroundColor: green[700]\n    },\n    color: yellow\n  }\n}))(Button)\n\nconst OrangeButton = withStyles((theme) => ({\n  root: {\n    color: theme.palette.getContrastText(orange[500]),\n    backgroundColor: orange[500],\n    '&:hover': {\n      backgroundColor: orange[700]\n    },\n    color: yellow\n  }\n}))(Button)\n\n\nconst Patient = (props) => {\n  const [patientName, setPatientName] = useState();\n  const [dob, setDob] = useState('');\n  const [email, setEmail] = useState('');\n  const [patientId, setPatientId] = useState('');\n  const [address, setAddress] = useState('');\n  const [allergy, setAllergy] = useState('');\n  const [gender, setGender] = useState();\n  const [displayAllergy, setDisplayAllergy] = useState();\n\nfunction updatePatient(){\n  const value = {\n      name: patientName,\n      dob: dob,\n      email: email,\n      patientId: patientId,\n      address: address,\n      allergy: allergy,\n      gender: gender\n  };\n  axios.put(`http://localhost:8081/updatePatient/${patientName}`, value)\n  .then( (response) => {\n      // handle success\n      var resData = response.data;\n      let data = JSON.stringify(resData);\n      Swal.fire({\n        icon: 'success',\n        title: 'Updated Patient!',\n    \n     \n      })\n      handleClearForm();\n   \n  });\n}\n\n    \n\n\n  function savePatient() {\n    const value = {\n      name: patientName,\n      dob: dob,\n      email: email,\n      patientId: patientId,\n      address: address,\n      allergy: allergy,\n      gender: gender\n    };\n\n    axios.post('http://localhost:8081/patient/', value).then((response) => {\n      // handle success\n      var resData = response.data;\n      Swal.fire({\n        icon: 'success',\n        title: 'New Patient saved!',\n     \n      })\n      handleClearForm();\n    });\n  }\n\n\n   const handleSavePatient = () => {\n      savePatient();\n\n   }\n\n\n  \n\n   const handleClearForm = () => {\n      setDob('');\n      setPatientId('');\n      setPatientName('');\n      setEmail('');\n      setAddress('');\n      setAllergy('')\n      setGender('');\n\n }\n\n\n const {history} = props;\n\n\n\n\n\nconst handleAlleryClick = (pageURL) => {\n     history.push(pageURL)\n     Swal.fire({\n      icon: 'success',\n      title: 'Updated Patient!',\n  \n   \n    })\n  \n     \n};\n\n\n\n\n\n    return(\n\n    <div>\n       <Box \n       display=\"flex\" \n       justifyContent=\"center\"\n        alignItems=\"center\">\n        <FormControl  className=\"forms\">\n       \n        <FormLabel style={{color:\"#3f51b5\"}} >\n            <h2 >\n             <strong>\n               <u>  Create Patient\n      {gender} </u>\n             </strong>\n           </h2>\n           </FormLabel>\n        \n           \n        <FormGroup className=\"forms\">\n           <TextField\n                className=\"textfield\"\n              \n                type=\"text\"\n                placeholder=\"Full Name\"\n                alignItems=\"center\"\n                value={patientName}\n                onChange={(e) => setPatientName(e.target.value)}\n                variant=\"outlined\"\n                label=\"Full Name\"\n                >\n                </TextField>\n               <br/>\n              \n                <TextField\n                className=\"textfield\"\n                label=\"Date Of Birth\"\n                type=\"text\"\n                placeholder=\"Date of Birth\"\n                value={dob}\n                onChange={(e) => setDob(e.target.value)}\n                variant=\"outlined\"\n                \n              />\n                   <br/>\n\n                   <TextField\n                className=\"textfield\"\n               \n                type=\"text\"\n                \n            \n                label=\"Address\"\n                openTo=\"year\"\n                value={address}\n                onChange={(e) => setAddress(e.target.value)}\n                variant=\"outlined\"\n                \n              />\n                   <br/>\n              \n            \n                 <TextField\n                className=\"textfield\"\n          \n                type=\"number\"\n                placeholder=\"Email-address\"\n                label=\"Emaildress\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                variant=\"outlined\"\n             \n              />\n         \n         <br/>\n              \n\n\n              <TextField\n                    className=\"textfield\"\n                    label=\"Patient ID\"\n                    type=\"number\"\n                    placeholder=\"Patient ID\"\n                    value={patientId}\n                    onChange={(e) => setPatientId(e.target.value)}\n                    variant=\"outlined\"\n                   \n                   \n             />\n          \n<br/>\n<Box sx={{ minWidth: 120 }}>\n                <FormControl fullWidth>\n                <FormLabel>Allergy</FormLabel>\n          \n                  <Select\n                \n                 \n                    \n                    value={allergy}\n                    className=\"textfield\"\n                    onChange={(e)=> setAllergy(e.target.value)}\n                    variant=\"outlined\"\n                    placeholder='allergy'\n                    \n                  >\n                    <MenuItem value={1}>Yes</MenuItem>\n                    <MenuItem value={0}>No</MenuItem>\n                 \n                  </Select>\n                </FormControl>\n              </Box>\n            \n              </FormGroup>\n              <br/>\n\n            \n<FormControl >\n\n\n\n\n                \n                  <RadioGroup\n        row\n        aria-label=\"gender\"\n        defaultValue=\"male\"\n        value={gender}\n        name=\"radio-buttons-group\"\n        className=\"radioButton\"\n        onChange={(e)=> setGender(e.target.value)}\n        >\n        <FormControlLabel value=\"female\" control={<Radio />} label=\"Female\" />\n        <FormControlLabel value=\"male\" control={<Radio />} label=\"Male\" />\n        <FormControlLabel value=\"other\" control={<Radio />} label=\"Other\" />\n        \n    \n        </RadioGroup>\n\n        </FormControl>\n        <Grid className=\"patientButtons\">\n              <ButtonGroup variant=\"outlined\"  className=\"smallButton\">\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n                className=\"smallButton\"\n                onClick={handleSavePatient}\n                style={{backgroundcolor: \"red\"}}\n                \n             \n              >\n                Save Patient\n              </Button>\n       \n\n              <Button\n                color=\"secondary\"\n                variant=\"contained\"\n                className=\"smallButton\"\n                onClick={handleClearForm}\n               \n                \n              >\n                Clear Form\n              </Button>\n\n\n\n              <GreenButton\n             variant='contained'\n              color='secondary'\n              onClick={updatePatient}\n             \n              >Update Patient</GreenButton>\n{}\n<OrangeButton\n             variant='contained'\n              color='secondary'\n              onClick={()=>handleAlleryClick('/allergy')}\n             \n              >Create Allergy</OrangeButton>\n\n\n         </ButtonGroup>\n         </Grid>\n       \n      \n    </FormControl>\n\n    \n\n        </Box>\n     \n    </div>\n    )\n\n}\n\nexport default withRouter(Patient);\n\n//https://www.youtube.com/watch?v=-XKaSCU0ZLM&t=2783s for notes and also to help with building"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/adamfoody/mwa/A2.2/client/my-app/src/Prescription.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { FormControl, TextField, makeStyles, FormLabel, Grid, Button, ButtonGroup, Box, Radio, RadioGroup, FormGroup, FormControlLabel, Container, InputLabel, MenuItem, Select, Icon } from '@material-ui/core';\nimport './App.css';\nimport { green, orange, yellow } from '@material-ui/core/colors';\nimport Swal from 'sweetalert2';\nimport { withStyles } from '@material-ui/core/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GreenButton = withStyles(theme => ({\n  root: {\n    color: theme.palette.getContrastText(green[500]),\n    backgroundColor: green[500],\n    '&:hover': {\n      backgroundColor: green[700]\n    },\n    color: yellow\n  }\n}))(Button);\n_c = GreenButton;\nconst OrangeButton = withStyles(theme => ({\n  root: {\n    color: theme.palette.getContrastText(orange[500]),\n    backgroundColor: orange[500],\n    '&:hover': {\n      backgroundColor: orange[700]\n    },\n    color: yellow\n  }\n}))(Button);\nexport default function Prescription() {\n  _s();\n\n  const [prescriptionId, setPrescriptionId] = useState('');\n  const [prescriptionName, setPrescriptionName] = useState('');\n  const [treatmentId, setTreatmentId] = useState('');\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [notes, setNotes] = useState('');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        className: \"forms\",\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          style: {\n            color: \"#3f51b5\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: /*#__PURE__*/_jsxDEV(\"u\", {\n                children: \"  Create Prescription \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          className: \"forms\",\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            className: \"textfield\",\n            type: \"text\",\n            placeholder: \"Prescription ID\",\n            alignItems: \"center\",\n            variant: \"outlined\",\n            label: \"Prescription ID\",\n            value: prescriptionId,\n            onChange: () => {}\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            className: \"textfield\",\n            label: \"Prescripton Name \",\n            type: \"text\",\n            placeholder: \"Prescription Name\",\n            variant: \"outlined\",\n            value: prescriptionName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 18\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            className: \"textfield\",\n            type: \"text\",\n            label: \"Treatment ID\",\n            value: treatmentId,\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            className: \"textfield\",\n            label: \"Start Date\",\n            type: \"number\",\n            placeholder: \"Start Date\",\n            value: startDate,\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            className: \"textfield\",\n            label: \"End Date\",\n            type: \"number\",\n            placeholder: \"End Date\",\n            value: startDate,\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              className: \"textfield2\",\n              type: \"number\",\n              placeholder: \"Notes\",\n              label: \"Notes\",\n              multiline: true,\n              rows: 5,\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          className: \"patientButtons\",\n          children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n            variant: \"outlined\",\n            className: \"smallButton\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              color: \"primary\",\n              variant: \"contained\",\n              className: \"smallButton\",\n              style: {\n                backgroundcolor: \"red\"\n              },\n              children: \"Save Allergy\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              color: \"secondary\",\n              variant: \"contained\",\n              className: \"smallButton\",\n              children: \"Clear Form\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 16\n            }, this), /*#__PURE__*/_jsxDEV(GreenButton, {\n              variant: \"contained\",\n              color: \"secondary\",\n              children: \"Update Allergy\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 16\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Prescription, \"o3z+33wEytIVZs2PQB6sK4Z5HQg=\");\n\n_c2 = Prescription;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GreenButton\");\n$RefreshReg$(_c2, \"Prescription\");","map":{"version":3,"sources":["/Users/adamfoody/mwa/A2.2/client/my-app/src/Prescription.js"],"names":["React","useState","axios","FormControl","TextField","makeStyles","FormLabel","Grid","Button","ButtonGroup","Box","Radio","RadioGroup","FormGroup","FormControlLabel","Container","InputLabel","MenuItem","Select","Icon","green","orange","yellow","Swal","withStyles","GreenButton","theme","root","color","palette","getContrastText","backgroundColor","OrangeButton","Prescription","prescriptionId","setPrescriptionId","prescriptionName","setPrescriptionName","treatmentId","setTreatmentId","startDate","setStartDate","endDate","setEndDate","notes","setNotes","backgroundcolor"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport axios from 'axios';\nimport {\n  FormControl,\n  TextField,\n  makeStyles,\n  FormLabel,\n  Grid,\n  Button,\n  ButtonGroup,\n  Box, Radio, RadioGroup, FormGroup,FormControlLabel\n, Container, InputLabel, MenuItem, Select,\nIcon} from '@material-ui/core';\nimport './App.css';\nimport { green, orange, yellow} from '@material-ui/core/colors'\nimport Swal from 'sweetalert2';\n \nimport { withStyles } from '@material-ui/core/styles';\n\nconst GreenButton = withStyles((theme) => ({\n    root: {\n      color: theme.palette.getContrastText(green[500]),\n      backgroundColor: green[500],\n      '&:hover': {\n        backgroundColor: green[700]\n      },\n      color: yellow\n    }\n  }))(Button)\n  \n  const OrangeButton = withStyles((theme) => ({\n    root: {\n      color: theme.palette.getContrastText(orange[500]),\n      backgroundColor: orange[500],\n      '&:hover': {\n        backgroundColor: orange[700]\n      },\n      color: yellow\n    }\n  }))(Button)\n\nexport default function Prescription() {\n\n    const [prescriptionId, setPrescriptionId] = useState('');\n    const [prescriptionName, setPrescriptionName] = useState('');\n    const [treatmentId, setTreatmentId] = useState('');\n    const [startDate, setStartDate] = useState('');\n    const [endDate, setEndDate] = useState('');\n    const [notes, setNotes] = useState('');\n\n\n\n    return (\n        <div>\n        <Box \n        display=\"flex\" \n        justifyContent=\"center\"\n         alignItems=\"center\">\n         <FormControl  className=\"forms\">\n        \n         <FormLabel style={{color:\"#3f51b5\"}} >\n             <h2 >\n              <strong>\n                <u>  Create Prescription </u>\n              </strong>\n            </h2>\n            </FormLabel>\n         \n            \n         <FormGroup className=\"forms\">\n            <TextField\n                 className=\"textfield\"\n               \n                 type=\"text\"\n                 placeholder= \"Prescription ID\"\n                 alignItems=\"center\"\n                 variant=\"outlined\"\n                 label=\"Prescription ID\"\n                 value={prescriptionId}\n                 onChange={()=> {}}\n                 >\n                 </TextField>\n                <br/>\n               \n                 <TextField\n                 className=\"textfield\"\n                 label=\"Prescripton Name \"\n                 type=\"text\"\n                 placeholder=\"Prescription Name\"\n                 variant=\"outlined\"\n                 value={prescriptionName}\n                 \n               />\n                    <br/>\n \n                    <TextField\n                 className=\"textfield\"\n                \n                 type=\"text\"\n                 \n             \n                 label=\"Treatment ID\"\n                value={treatmentId}\n            \n                 variant=\"outlined\"\n                 \n               />\n                    <br/>\n               \n             \n               \n \n               <TextField\n                     className=\"textfield\"\n                     label=\"Start Date\"\n                     type=\"number\"\n                     placeholder=\"Start Date\"\n                     value={startDate}\n\n\n                \n                   \n                     variant=\"outlined\"\n                    \n                    \n              />\n            <br/>\n\n                <TextField\n                     className=\"textfield\"\n                     label=\"End Date\"\n                     type=\"number\"\n                     placeholder=\"End Date\"\n                     value = {startDate}        \n                     variant=\"outlined\"\n                    \n                    \n              />\n                <br/>\n                <FormGroup >\n                <TextField \n                 className=\"textfield2\"\n                \n                 type=\"number\"\n                 placeholder=\"Notes\"\n                 label=\"Notes\"\n                  multiline\n                rows={5}\n            \n          \n                 variant=\"outlined\"\n                \n              \n            />\n            </FormGroup>\n                \n\n                    </FormGroup>\n                    <br/>\n        \n        \n                <Grid className=\"patientButtons\">\n                <ButtonGroup variant=\"outlined\"  className=\"smallButton\">\n                <Button\n                 color=\"primary\"\n                 variant=\"contained\"\n                 className=\"smallButton\"\n                 style={{backgroundcolor: \"red\"}}\n                 \n              \n               >\n                 Save Allergy\n               </Button>\n        \n \n               <Button\n                 color=\"secondary\"\n                 variant=\"contained\"\n                 className=\"smallButton\"\n               \n              \n                \n                 \n               >\n                 Clear Form\n               </Button>\n \n \n \n               <GreenButton\n              variant='contained'\n               color='secondary'\n           \n         \n              \n               >Update Allergy</GreenButton>\n \n\n \n \n          </ButtonGroup>\n          </Grid>\n        \n       \n     </FormControl>\n \n     \n \n         </Box>\n      \n     </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}
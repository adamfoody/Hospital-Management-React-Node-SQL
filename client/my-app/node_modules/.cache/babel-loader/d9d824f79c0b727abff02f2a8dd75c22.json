{"ast":null,"code":"var _jsxFileName = \"/Users/adamfoody/mwa/test/client/my-app/src/Treatment.js\",\n    _s = $RefreshSig$();\n\nimport React, { useStyles } from 'react';\nimport axios from 'axios';\nimport { FormControl, TextField, makeStyles, FormLabel, Grid, Button, ButtonGroup, Box } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Treatment = () => {\n  _s();\n\n  const [treatmentType, setTreatmentType] = React.useState('');\n  const [treatmentCategory, setTreatmentCategory] = React.useState('');\n  const [startDate, setStartDate] = React.useState('');\n  const [prescription, setPrescription] = React.useState('');\n  const [treatmentId, setTreatmentId] = React.useState('');\n\n  function saveTreatment() {\n    const value = {\n      treatmentId: treatmentId,\n      treatmentType: treatmentType,\n      treatmentCategory: treatmentCategory,\n      startDate: startDate,\n      prescription: prescription\n    };\n    axios.post('http://localhost:8081/treatment', value).then(response => {\n      // handle success\n      var resData = response.data;\n      let data = JSON.stringify(resData);\n      window.alert('Response recieved from server = ' + data);\n    });\n  }\n\n  function saveTreatmentHandler() {\n    saveTreatment();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        className: \"forms\",\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          style: {\n            color: \"#3f51b5\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: /*#__PURE__*/_jsxDEV(\"u\", {\n                children: \"  Create Treatment \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 16\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 14\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          className: \"textfield\",\n          variant: \"outlined\",\n          type: \"number\",\n          placeholder: \"Treatment ID\",\n          className: \"forms\",\n          label: \"Treatment ID\",\n          value: treatmentId,\n          onChange: e => setTreatmentId(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          className: \"textfield\",\n          variant: \"outlined\",\n          type: \"text\",\n          label: \"Type\",\n          select: true,\n          value: treatmentType,\n          onChange: e => setTreatmentType(e.target.value),\n          className: \"forms\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          className: \"textfield\",\n          required: true,\n          type: \"text\",\n          label: \"Category\",\n          variant: \"outlined\",\n          className: \"forms\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          className: \"textField\",\n          type: \"text\",\n          type: \"date\",\n          openTo: \"year\",\n          helperText: \"Treatment Start Date\",\n          variant: \"outlined\",\n          className: \"forms\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          className: \"textfield\",\n          label: \"Prescription\",\n          type: \"text\",\n          variant: \"outlined\",\n          className: \"forms\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          className: \"patientButtons\",\n          children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n            variant: \"outlined\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              color: \"primary\",\n              variant: \"contained\",\n              children: \"Save Treatment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              color: \"secondary\",\n              variant: \"contained\",\n              children: \"Clear Form\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 8\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Treatment, \"3zQZORe49koK7oSolg64QTvDnQs=\");\n\n_c = Treatment;\nexport default Treatment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Treatment\");","map":{"version":3,"sources":["/Users/adamfoody/mwa/test/client/my-app/src/Treatment.js"],"names":["React","useStyles","axios","FormControl","TextField","makeStyles","FormLabel","Grid","Button","ButtonGroup","Box","Treatment","treatmentType","setTreatmentType","useState","treatmentCategory","setTreatmentCategory","startDate","setStartDate","prescription","setPrescription","treatmentId","setTreatmentId","saveTreatment","value","post","then","response","resData","data","JSON","stringify","window","alert","saveTreatmentHandler","color","e","target"],"mappings":"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","sourcesContent":["import React, {useStyles} from 'react';\nimport axios from 'axios';\nimport {\n  FormControl,\n  TextField,\n  makeStyles,\n  FormLabel,\n  Grid,\n  Button,\n  ButtonGroup,\n  Box\n} from '@material-ui/core';\n\n\n\nconst Treatment = () => {\n\n\n  const [treatmentType, setTreatmentType] = React.useState('');\n  const [treatmentCategory, setTreatmentCategory] = React.useState('');\n  const [startDate, setStartDate] = React.useState('');\n  const [prescription, setPrescription] = React.useState('');\n  const [treatmentId, setTreatmentId] = React.useState('');\n\n\n  function saveTreatment() {\n    const value = {\n      treatmentId: treatmentId,\n      treatmentType: treatmentType,\n      treatmentCategory: treatmentCategory,\n      startDate: startDate,\n      prescription: prescription,\n    };\n\n    axios.post('http://localhost:8081/treatment', value).then((response) => {\n      // handle success\n      var resData = response.data;\n      let data = JSON.stringify(resData);\n      window.alert('Response recieved from server = ' + data);\n    });\n  }\n\n  function saveTreatmentHandler() {\n    saveTreatment();\n  }\n\n\n\n\n\n\n    return(\n\n    <div>\n       <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n        <FormControl className=\"forms\">\n        <FormLabel style={{color:\"#3f51b5\"}} >\n            <h2 >\n             <strong>\n               <u>  Create Treatment </u>\n             </strong>\n           </h2>\n           </FormLabel>\n           <TextField\n                className=\"textfield\"\n                variant=\"outlined\"\n                type=\"number\"\n                placeholder=\"Treatment ID\"\n                className=\"forms\"\n                label=\"Treatment ID\"\n                value={treatmentId}\n                onChange={(e) => setTreatmentId(e.target.value)}\n              />\n          <br/>\n              <TextField\n                className=\"textfield\"\n                variant=\"outlined\"\n                type=\"text\"\n               label=\"Type\"\n                select={true}\n                value={treatmentType}\n                onChange={(e) => setTreatmentType(e.target.value)}\n              \n                className=\"forms\"\n              />\n              <br />\n              <TextField\n                className=\"textfield\"\n                required = {true}\n                type=\"text\"\n                label=\"Category\"\n             \n                variant=\"outlined\"\n                className=\"forms\"\n              />\n             <br/>\n\n\n\n              <TextField\n                className=\"textField\"\n              \n                type=\"text\"\n                type=\"date\"\n                openTo=\"year\"\n                helperText=\"Treatment Start Date\"\n                \n                variant=\"outlined\"\n\n                className=\"forms\"\n              />\n\n\n\n\n              <br />\n              <TextField\n                className=\"textfield\"\n                label=\"Prescription\"\n                type=\"text\"\n            \n                variant=\"outlined\"\n                className=\"forms\"\n              />\n              <br />\n              <Grid className=\"patientButtons\"> \n              <ButtonGroup variant=\"outlined\">\n                <Button\n                  color=\"primary\"\n                  variant=\"contained\"\n                  \n        \n                >\n                  Save Treatment\n                </Button>\n                <br />\n                <Button\n                  color=\"secondary\"\n                  variant=\"contained\"\n        \n                >\n                  Clear Form\n                </Button>\n              </ButtonGroup>\n              </Grid>\n\n        </FormControl>\n\n        </Box>\n      \n      \n    </div>\n    )\n\n}\n\nexport default Treatment;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/adamfoody/mwa/A2.2/client/my-app/src/Treatment.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useStyles } from 'react';\nimport axios from 'axios';\nimport { FormControl, TextField, makeStyles, FormLabel, Grid, Button, ButtonGroup, Box } from '@material-ui/core';\nimport { green, yellow } from '@material-ui/core/colors';\nimport \"./App.css\";\nimport Swal from 'sweetalert2';\nimport { withStyles } from '@material-ui/core/styles'; //Created a green version of the MUI button component for update records. Using withStyles. \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GreenButton = withStyles(theme => ({\n  root: {\n    color: theme.palette.getContrastText(green[500]),\n    backgroundColor: green[500],\n    '&:hover': {\n      backgroundColor: green[700]\n    },\n    color: yellow\n  }\n}))(Button);\n_c = GreenButton;\n\nconst Treatment = () => {\n  _s();\n\n  const [treatmentType, setTreatmentType] = useState('');\n  const [treatmentCategory, setTreatmentCategory] = useState('');\n  const [startDate, setStartDate] = useState('');\n  const [prescription, setPrescription] = React.useState('');\n  const [treatmentId, setTreatmentId] = React.useState('');\n\n  function updateTreatment() {\n    const value = {\n      treatmentId: treatmentId,\n      treatmentCategory: treatmentCategory,\n      treatmentType: treatmentType,\n      startDate: startDate,\n      prescription: prescription\n    };\n    axios.put(`http://localhost:8081/updateTreatment/${treatmentId}`, value).then(response => {\n      // handle success\n      var resData = response.data;\n      let data = JSON.stringify(resData);\n      window.alert(\"Response recieved from server = \" + data);\n    });\n  }\n\n  const handleClearForm = () => {\n    setTreatmentType('');\n    setTreatmentCategory('');\n    setStartDate('');\n    setPrescription('');\n    setTreatmentId('');\n  };\n\n  function saveTreatment() {\n    const value = {\n      treatmentId: treatmentId,\n      treatmentType: treatmentType,\n      treatmentCategory: treatmentCategory,\n      startDate: startDate,\n      prescription: prescription\n    };\n    axios.post('http://localhost:8081/treatment', value).then(response => {\n      // handle success\n      var resData = response.data;\n      let data = JSON.stringify(resData);\n      Swal.fire({\n        icon: 'success',\n        title: 'New Treatment Record saved!'\n      });\n    });\n  }\n\n  function saveTreatmentHandler() {\n    saveTreatment();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        className: \"forms\",\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          style: {\n            color: \"#3f51b5\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: /*#__PURE__*/_jsxDEV(\"u\", {\n                children: \"  Create Treatment \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 16\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 14\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          className: \"textfield\",\n          variant: \"outlined\",\n          type: \"number\",\n          placeholder: \"Treatment ID\",\n          label: \"Treatment ID\",\n          value: treatmentId,\n          onChange: e => setTreatmentId(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          className: \"textfield\",\n          variant: \"outlined\",\n          type: \"text\",\n          label: \"Type\",\n          value: treatmentType,\n          onChange: e => setTreatmentType(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          className: \"textfield\",\n          required: true,\n          type: \"text\",\n          label: \"Category\",\n          value: treatmentCategory,\n          onChange: e => setTreatmentCategory(e.target.value),\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          className: \"textfield\",\n          type: \"date\",\n          openTo: \"year\",\n          helperText: \"Treatment Start Date\",\n          value: startDate,\n          onChange: e => setStartDate(e.target.value),\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          className: \"textfield\",\n          label: \"Prescription\",\n          type: \"text\",\n          value: prescription,\n          onChange: e => setPrescription(e.target.value),\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          className: \"patientButtons\",\n          children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n            variant: \"outlined\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              color: \"primary\",\n              variant: \"contained\",\n              onClick: saveTreatmentHandler,\n              children: \"Save Treatment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              color: \"secondary\",\n              variant: \"contained\",\n              onClick: handleClearForm,\n              children: \"Clear Form\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(GreenButton, {\n              variant: \"contained\",\n              color: \"secondary\",\n              onClick: updateTreatment,\n              children: \"Update Patient\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 8\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Treatment, \"3zQZORe49koK7oSolg64QTvDnQs=\");\n\n_c2 = Treatment;\nexport default Treatment;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GreenButton\");\n$RefreshReg$(_c2, \"Treatment\");","map":{"version":3,"sources":["/Users/adamfoody/mwa/A2.2/client/my-app/src/Treatment.js"],"names":["React","useState","useStyles","axios","FormControl","TextField","makeStyles","FormLabel","Grid","Button","ButtonGroup","Box","green","yellow","Swal","withStyles","GreenButton","theme","root","color","palette","getContrastText","backgroundColor","Treatment","treatmentType","setTreatmentType","treatmentCategory","setTreatmentCategory","startDate","setStartDate","prescription","setPrescription","treatmentId","setTreatmentId","updateTreatment","value","put","then","response","resData","data","JSON","stringify","window","alert","handleClearForm","saveTreatment","post","fire","icon","title","saveTreatmentHandler","e","target"],"mappings":"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","sourcesContent":["import React, {useState,useStyles} from 'react';\nimport axios from 'axios';\nimport {\n  FormControl,\n  TextField,\n  makeStyles,\n  FormLabel,\n  Grid,\n  Button,\n  ButtonGroup,\n  Box\n} from '@material-ui/core';\nimport { green, yellow} from '@material-ui/core/colors'\nimport \"./App.css\";\nimport Swal from 'sweetalert2';\n\nimport { withStyles } from '@material-ui/core/styles'\n\n;\n\n\n\n//Created a green version of the MUI button component for update records. Using withStyles. \n\nconst GreenButton = withStyles((theme) => ({\n  root: {\n    color: theme.palette.getContrastText(green[500]),\n    backgroundColor: green[500],\n    '&:hover': {\n      backgroundColor: green[700]\n    },\n    color: yellow\n  }\n}))(Button)\n\n\n\n\nconst Treatment = () => {\n\n\n  const [treatmentType, setTreatmentType] = useState('');\n  const [treatmentCategory, setTreatmentCategory] = useState('');\n  const [startDate, setStartDate] = useState('');\n  const [prescription, setPrescription] = React.useState('');\n  const [treatmentId, setTreatmentId] = React.useState('');\n\n\n\n\n  function updateTreatment(){\n    const value = {\n        treatmentId: treatmentId,\n        treatmentCategory: treatmentCategory,\n        treatmentType: treatmentType,\n        startDate: startDate,\n        prescription: prescription\n       \n    };\n    axios.put(`http://localhost:8081/updateTreatment/${treatmentId}`, value)\n    .then( (response) => {\n        // handle success\n        var resData = response.data;\n        let data = JSON.stringify(resData);\n        window.alert(\"Response recieved from server = \" + data);\n    });\n  }\n  \n\n  const handleClearForm = () => {\n      setTreatmentType('');\n      setTreatmentCategory('');\n      setStartDate('');\n      setPrescription('');\n      setTreatmentId('');\n\n  } \n\n\n  function saveTreatment() {\n    const value = {\n      treatmentId: treatmentId,\n      treatmentType: treatmentType,\n      treatmentCategory: treatmentCategory,\n      startDate: startDate,\n      prescription: prescription,\n    };\n\n    axios.post('http://localhost:8081/treatment', value).then((response) => {\n      // handle success\n      var resData = response.data;\n      let data = JSON.stringify(resData);\n      Swal.fire({\n        icon: 'success',\n        title: 'New Treatment Record saved!',\n      })\n\n\n\n\n\n\n    \n    });\n  }\n\n  function saveTreatmentHandler() {\n    saveTreatment();\n  }\n\n\n\n\n\n\n    return(\n\n    <div>\n       <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n        <FormControl className=\"forms\">\n        <FormLabel style={{color:\"#3f51b5\"}} >\n            <h2 >\n             <strong>\n               <u>  Create Treatment </u>\n             </strong>\n           </h2>\n           </FormLabel>\n           <TextField\n                className=\"textfield\"\n                variant=\"outlined\"\n                type=\"number\"\n                placeholder=\"Treatment ID\"\n             \n                label=\"Treatment ID\"\n                value={treatmentId}\n                onChange={(e) => setTreatmentId(e.target.value)}\n              />\n          <br/>\n              <TextField\n                className=\"textfield\"\n                variant=\"outlined\"\n                type=\"text\"\n               label=\"Type\"\n                value={treatmentType}\n                onChange={(e) => setTreatmentType(e.target.value)}\n            \n              />\n              <br />\n              <TextField\n                className=\"textfield\"\n                required = {true}\n                type=\"text\"\n                label=\"Category\"\n                value={treatmentCategory}\n                onChange={(e) => setTreatmentCategory(e.target.value)}\n                variant=\"outlined\"\n     \n                \n              />\n             <br/>\n\n\n\n              <TextField\n                className=\"textfield\"\n              \n                \n                type=\"date\"\n                openTo=\"year\"\n                helperText=\"Treatment Start Date\"\n                value={startDate}\n                onChange={(e) => setStartDate(e.target.value)}\n                variant=\"outlined\"\n\n              />\n\n\n\n\n              <br />\n              <TextField\n                className=\"textfield\"\n                label=\"Prescription\"\n                type=\"text\"\n                value={prescription}\n                onChange={(e) => setPrescription(e.target.value)}\n            \n                variant=\"outlined\"\n           \n              />\n              <br />\n              <Grid className=\"patientButtons\"> \n              <ButtonGroup variant=\"outlined\">\n                <Button\n                  color=\"primary\"\n                  variant=\"contained\"\n                  onClick={saveTreatmentHandler}\n                  \n        \n                >\n                  Save Treatment\n                </Button>\n                <br />\n                <Button\n                  color=\"secondary\"\n                  variant=\"contained\"\n                  onClick={handleClearForm}\n        \n                >\n                  Clear Form\n                </Button>\n                <GreenButton\n             variant='contained'\n              color='secondary'\n             onClick={updateTreatment}\n              >Update Patient</GreenButton>\n              </ButtonGroup>\n              </Grid>\n\n        </FormControl>\n\n        </Box>\n      \n      \n    </div>\n    )\n\n}\n\nexport default Treatment;\n"]},"metadata":{},"sourceType":"module"}
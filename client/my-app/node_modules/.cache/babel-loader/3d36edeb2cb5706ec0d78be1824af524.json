{"ast":null,"code":"var _jsxFileName = \"/Users/adamfoody/mwa/Final Assignment 2/incasebreak,new/client/my-app/src/Completed.js\",\n    _s = $RefreshSig$();\n\nimport Swal from 'sweetalert2';\nimport \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport { Grid, Button, TableLabel, ButtonGroup, TableContainer, Table, FormControl, Paper, TableHead, TableRow, TableCell, TableBody, makeStyles, MenuItem, Select, InputLabel } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles'; // I need to useEffect to render the table once automatically so it's not just a blank page. Add a filter by Category .filter() select  Then return the filtered data\n\nimport { green, yellow } from '@material-ui/core/colors';\nimport { width } from '@mui/system';\nimport { Clock } from './Clock.js';\nimport { DateToday } from './Date.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Completed = () => {\n  _s();\n\n  const [completed, setCompleted] = useState([]);\n  const GreenButton = withStyles(theme => ({\n    root: {\n      color: theme.palette.getContrastText(green[500]),\n      backgroundColor: green[500],\n      '&:hover': {\n        backgroundColor: green[700]\n      },\n      color: yellow\n    }\n  }))(Button);\n\n  function fetchCompletedRecords() {\n    axios.get('http://localhost:8081/allcompleted').then(response => {\n      // handle success\n      setCompleted(response.data);\n    });\n  }\n\n  const useStyles = makeStyles(theme => ({\n    tableHead: {\n      borderBottomStyle: \"solid\",\n      borderBottomColor: \"blue\"\n    },\n    stickyHeader: {}\n  }));\n  useEffect(() => {\n    fetchCompletedRecords();\n  }, []);\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      className: classes.tableContainer,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        stickyHeader: true,\n        sx: {\n          minWidth: 650\n        },\n        \"aria-label\": \"simple table\",\n        variant: \"outlined\",\n        children: [/*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: [\" Patient ID    \", /*#__PURE__*/_jsxDEV(ButtonGroup, {\n              className: \"refreshButton\",\n              children: [/*#__PURE__*/_jsxDEV(GreenButton, {\n                variant: \"contained\",\n                color: \"secondary\",\n                size: \"small\",\n                onClick: fetchCompletedRecords,\n                children: \"Refresh\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 1\n              }, this), \"treatment.treatmentId, treatment.treatmentType, treatment.treatmentCategory,  treatment.startDate, treatment.endDate , treatment.prescription\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 37\n            }, this), \"  \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \" Full Name \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 22\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"DOB \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \" ADDRESS \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \" Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 36\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \" Allergy\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 36\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \" Gender \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 36\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \" Treatment ID \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 36\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \" Treatment TYPE \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 36\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \" Treatment Category \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 36\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \" Start Date \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 36\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \" End Date \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 36\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \" Prescription \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 36\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: completed.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n            sx: {\n              '&:last-child td, &:last-child th': {\n                border: 0\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              component: \"th\",\n              scope: \"row\",\n              children: [\" \", row.treatmentId, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: row.treatmentType\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: row.treatmentCategory\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: row.startDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: row.endDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 13\n            }, this), row.prescription == 0 && /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \" No Prescription \\u274C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this), row.prescription == 1 && /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              className: \"hasPrescription\",\n              children: \"Prescription\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                justifyContent: \"flex-end\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 17\n            }, this)]\n          }, row.patientId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 11\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 1\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Completed, \"gy7jVG5FFYv+2jfxi8zHM0N3KMQ=\", true);\n\n_c = Completed;\n\nvar _c;\n\n$RefreshReg$(_c, \"Completed\");","map":{"version":3,"sources":["/Users/adamfoody/mwa/Final Assignment 2/incasebreak,new/client/my-app/src/Completed.js"],"names":["Swal","React","useState","useEffect","axios","Grid","Button","TableLabel","ButtonGroup","TableContainer","Table","FormControl","Paper","TableHead","TableRow","TableCell","TableBody","makeStyles","MenuItem","Select","InputLabel","withStyles","green","yellow","width","Clock","DateToday","Completed","completed","setCompleted","GreenButton","theme","root","color","palette","getContrastText","backgroundColor","fetchCompletedRecords","get","then","response","data","useStyles","tableHead","borderBottomStyle","borderBottomColor","stickyHeader","classes","tableContainer","minWidth","map","row","border","treatmentId","treatmentType","treatmentCategory","startDate","endDate","prescription","patientId"],"mappings":"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","sourcesContent":["import Swal from 'sweetalert2';\nimport \"./App.css\";\nimport React , {useState, useEffect} from \"react\"\nimport axios from 'axios';\nimport {Grid, Button, TableLabel,ButtonGroup, TableContainer, Table,FormControl, Paper, TableHead, TableRow, TableCell, TableBody, makeStyles, MenuItem, Select, InputLabel} from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles'\n// I need to useEffect to render the table once automatically so it's not just a blank page. Add a filter by Category .filter() select  Then return the filtered data\nimport { green, yellow} from '@material-ui/core/colors'\nimport { width } from '@mui/system';\nimport { Clock } from './Clock.js';\nimport { DateToday } from './Date.js';\n\n\nexport const Completed = () => {\n    const [completed, setCompleted] = useState([]);\n\n\n        const GreenButton = withStyles((theme) => ({\n            root: {\n            color: theme.palette.getContrastText(green[500]),\n            backgroundColor: green[500],\n            '&:hover': {\n                backgroundColor: green[700]\n            },\n            color: yellow\n            }\n        }))(Button)\n\n    function fetchCompletedRecords() {\n        axios.get('http://localhost:8081/allcompleted').then((response) => {\n          // handle success\n          setCompleted(response.data);\n        \n        });\n      } \n\n      const useStyles = makeStyles((theme) => ({\n        tableHead: {\n            borderBottomStyle: \"solid\",\n            borderBottomColor: \"blue\"\n        },\n        stickyHeader:{\n          \n        }\n    }));\n    \n\n      useEffect(() => {\n        fetchCompletedRecords();\n      \n      }, []);\n    \n      const classes = useStyles();\n\n  return ( <div>\n\n  \n<TableContainer component={Paper} className={classes.tableContainer}>\n          \n\n          <Table stickyHeader sx={{ minWidth: 650 }} aria-label=\"simple table\" variant=\"outlined\" >\n   \n     \n       \n    \n        <TableRow >\n    \n          <TableCell> Patient ID    <ButtonGroup className=\"refreshButton\"> \n\n<GreenButton\n      variant='contained'\n       color='secondary'\n       size=\"small\"\n       onClick={fetchCompletedRecords}\n   \n       \n       >Refresh</GreenButton>\ntreatment.treatmentId, treatment.treatmentType, treatment.treatmentCategory,  treatment.startDate, treatment.endDate , treatment.prescription\n  </ButtonGroup>  </TableCell>\n          <TableCell><strong> Full Name </strong> </TableCell>\n          <TableCell align=\"right\"> <strong>DOB </strong></TableCell>\n          <TableCell align=\"right\"> ADDRESS </TableCell>\n          <TableCell align=\"right\"><strong> Email</strong></TableCell>\n          <TableCell align=\"right\"><strong> Allergy</strong></TableCell>\n          <TableCell align=\"right\"><strong> Gender </strong> </TableCell>\n          <TableCell align=\"right\"><strong> Treatment ID </strong></TableCell>\n          <TableCell align=\"right\"><strong> Treatment TYPE </strong></TableCell>\n          <TableCell align=\"right\"><strong> Treatment Category </strong></TableCell>\n          <TableCell align=\"right\"><strong> Start Date </strong></TableCell>\n          <TableCell align=\"right\"><strong> End Date </strong></TableCell>\n          <TableCell align=\"right\"><strong> Prescription </strong></TableCell>\n        </TableRow>\n      \n      <TableBody>\n \n        {    completed.map((row) => (\n          <TableRow\n            key={row.patientId}\n            sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n          >\n            <TableCell component=\"th\" scope=\"row\"> {row.treatmentId} </TableCell>\n            <TableCell align=\"right\">{row.treatmentType}</TableCell>\n            <TableCell align=\"right\">{row.treatmentCategory}</TableCell>\n            <TableCell align=\"right\">{row.startDate}</TableCell>\n            <TableCell align=\"right\">{row.endDate}</TableCell>\n          \n\n              {row.prescription == 0 && (\n              <TableCell align=\"right\"> No Prescription &#10060;</TableCell>\n              )}\n              {row.prescription == 1 && (\n              <TableCell align=\"right\" className=\"hasPrescription\"> \n         \n                Prescription\n                \n          \n              </TableCell>\n              )}\n              <TableCell> \n              <Grid container justifyContent=\"flex-end\">\n\n           \n              </Grid>\n         \n                </TableCell>\n                <TableCell>\n    \n      \n                \n              </TableCell>\n          </TableRow>\n        ))}\n      </TableBody>\n    </Table>\n\n\n\n\n\n          </TableContainer>\n\n    \n\n\n  </div>);\n};\n"]},"metadata":{},"sourceType":"module"}
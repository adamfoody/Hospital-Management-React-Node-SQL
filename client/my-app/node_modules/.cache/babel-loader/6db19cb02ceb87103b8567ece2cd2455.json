{"ast":null,"code":"var _jsxFileName = \"/Users/adamfoody/mwa/test/client/my-app/src/Patient.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { FormControl, TextField, makeStyles, FormLabel, Grid, Button, ButtonGroup, Box, Radio, RadioGroup, FormGroup, FormControlLabel, Container } from '@material-ui/core';\nimport { withRouter, useHistory } from \"react-router-dom\";\nimport NavBar from './NavBar';\nimport './App.css';\nimport { green, yellow } from '@material-ui/core/colors';\nimport Swal from 'sweetalert2';\nimport { withStyles } from '@material-ui/core/styles'; //Created a green version of the MUI button component for update records. Using withStyles. \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GreenButton = withStyles(theme => ({\n  root: {\n    color: theme.palette.getContrastText(green[500]),\n    backgroundColor: green[500],\n    '&:hover': {\n      backgroundColor: green[700]\n    },\n    color: yellow\n  }\n}))(Button);\n_c = GreenButton;\n\nconst Patient = () => {\n  _s();\n\n  const [patientName, setPatientName] = useState();\n  const [dob, setDob] = useState('');\n  const [treatmentId, setTreatmentId] = useState('');\n  const [patientId, setPatientId] = useState('');\n  const [address, setAddress] = useState('');\n  const [allergy, setAllergy] = useState('');\n  const [gender, setGender] = useState(''); // fix gender at end \n\n  function updatePatient() {\n    const value = {\n      name: patientName,\n      dob: dob,\n      treatmentId: treatmentId,\n      patientId: patientId,\n      address: address,\n      allergy: allergy\n    };\n    axios.put(`http://localhost:8081/updatePatient/${patientName}`, value).then(response => {\n      // handle success\n      var resData = response.data;\n      let data = JSON.stringify(resData);\n      Swal.fire('Good job!', 'You clicked the button!', 'success');\n    });\n  }\n\n  function savePatient() {\n    const value = {\n      name: patientName,\n      dob: dob,\n      treatmentId: treatmentId,\n      patientId: patientId,\n      address: address,\n      allergy: allergy\n    };\n    axios.post('http://localhost:8081/patient', value).then(response => {\n      // handle success\n      var resData = response.data;\n      let data = JSON.stringify(resData);\n      window.alert('Response recieved from server = ' + data);\n    });\n  }\n\n  const handleSavePatient = () => {\n    savePatient();\n  };\n\n  const handleClearForm = () => {\n    setDob('');\n    setPatientId('');\n    setPatientName('');\n    setTreatmentId('');\n    setAddress('');\n    setAllergy('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        className: \"forms\",\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          style: {\n            color: \"#3f51b5\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: /*#__PURE__*/_jsxDEV(\"u\", {\n                children: \"  Create Patient \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 16\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 14\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          className: \"forms\",\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            className: \"textfield\",\n            type: \"text\",\n            placeholder: \"Full Name\",\n            alignItems: \"center\",\n            value: patientName,\n            onChange: e => setPatientName(e.target.value),\n            variant: \"outlined\",\n            label: \"Full Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            className: \"textfield\",\n            label: \"Date Of Birth\",\n            type: \"text\",\n            placeholder: \"Date of Birth\",\n            value: dob,\n            onChange: e => setDob(e.target.value),\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 20\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            className: \"textfield\",\n            type: \"text\",\n            label: \"Address\",\n            openTo: \"year\",\n            value: address,\n            onChange: e => setAddress(e.target.value),\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 20\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 20\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            className: \"textfield\",\n            type: \"number\",\n            placeholder: \"Treatment ID\",\n            label: \"Treatment ID\",\n            value: treatmentId,\n            onChange: e => setTreatmentId(e.target.value),\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 18\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            className: \"textfield\",\n            label: \"Patient ID\",\n            type: \"number\",\n            placeholder: \"Patient ID\",\n            value: patientId,\n            onChange: e => setPatientId(e.target.value),\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            className: \"textfield\",\n            label: \"Allergy\",\n            type: \"number\",\n            placeholder: \"Allergy\",\n            value: allergy,\n            onChange: e => setAllergy(e.target.value),\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          children: /*#__PURE__*/_jsxDEV(RadioGroup, {\n            row: true,\n            \"aria-label\": \"gender\",\n            defaultValue: \"female\",\n            name: \"radio-buttons-group\",\n            className: \"radioButton\",\n            children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"female\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 51\n              }, this),\n              label: \"Female\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"male\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 49\n              }, this),\n              label: \"Male\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"other\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 50\n              }, this),\n              label: \"Other\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          className: \"patientButtons\",\n          children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n            variant: \"outlined\",\n            className: \"smallButton\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              color: \"primary\",\n              variant: \"contained\",\n              className: \"smallButton\",\n              onClick: handleSavePatient,\n              style: {\n                backgroundcolor: \"red\"\n              },\n              children: \"Save Patient\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              color: \"secondary\",\n              variant: \"contained\",\n              className: \"smallButton\",\n              onClick: handleClearForm,\n              children: \"Clear Form\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(GreenButton, {\n              variant: \"contained\",\n              color: \"secondary\",\n              onClick: updatePatient,\n              children: \"Update Patient\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 8\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Patient, \"K8cUEA5iAJpghhNAwpQiVXSm/JA=\");\n\n_c2 = Patient;\nexport default Patient; //https://www.youtube.com/watch?v=-XKaSCU0ZLM&t=2783s for notes and also to help with building\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GreenButton\");\n$RefreshReg$(_c2, \"Patient\");","map":{"version":3,"sources":["/Users/adamfoody/mwa/test/client/my-app/src/Patient.js"],"names":["React","useState","axios","FormControl","TextField","makeStyles","FormLabel","Grid","Button","ButtonGroup","Box","Radio","RadioGroup","FormGroup","FormControlLabel","Container","withRouter","useHistory","NavBar","green","yellow","Swal","withStyles","GreenButton","theme","root","color","palette","getContrastText","backgroundColor","Patient","patientName","setPatientName","dob","setDob","treatmentId","setTreatmentId","patientId","setPatientId","address","setAddress","allergy","setAllergy","gender","setGender","updatePatient","value","name","put","then","response","resData","data","JSON","stringify","fire","savePatient","post","window","alert","handleSavePatient","handleClearForm","e","target","backgroundcolor"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport axios from 'axios';\nimport {\n  FormControl,\n  TextField,\n  makeStyles,\n  FormLabel,\n  Grid,\n  Button,\n  ButtonGroup,\n  Box, Radio, RadioGroup, FormGroup,FormControlLabel\n, Container} from '@material-ui/core';\nimport {withRouter, useHistory} from \"react-router-dom\"\nimport NavBar from './NavBar';\nimport './App.css';\nimport { green, yellow} from '@material-ui/core/colors'\nimport Swal from 'sweetalert2';\n \nimport { withStyles } from '@material-ui/core/styles'\n\n//Created a green version of the MUI button component for update records. Using withStyles. \n\n\n\nconst GreenButton = withStyles((theme) => ({\n  root: {\n    color: theme.palette.getContrastText(green[500]),\n    backgroundColor: green[500],\n    '&:hover': {\n      backgroundColor: green[700]\n    },\n    color: yellow\n  }\n}))(Button)\n\n\nconst Patient = () => {\n  const [patientName, setPatientName] = useState();\n  const [dob, setDob] = useState('');\n  const [treatmentId, setTreatmentId] = useState('');\n  const [patientId, setPatientId] = useState('');\n  const [address, setAddress] = useState('');\n  const [allergy, setAllergy] = useState('');\n  const [gender, setGender] = useState('');\n\n// fix gender at end \nfunction updatePatient(){\n  const value = {\n      name: patientName,\n      dob: dob,\n      treatmentId: treatmentId,\n      patientId: patientId,\n      address: address,\n      allergy: allergy\n  };\n  axios.put(`http://localhost:8081/updatePatient/${patientName}`, value)\n  .then( (response) => {\n      // handle success\n      var resData = response.data;\n      let data = JSON.stringify(resData);\n      Swal.fire(\n        'Good job!',\n        'You clicked the button!',\n        'success'\n      )\n  });\n}\n\n    \n\n\n  function savePatient() {\n    const value = {\n      name: patientName,\n      dob: dob,\n      treatmentId: treatmentId,\n      patientId: patientId,\n      address: address,\n      allergy: allergy,\n    };\n\n    axios.post('http://localhost:8081/patient', value).then((response) => {\n      // handle success\n      var resData = response.data;\n      let data = JSON.stringify(resData);\n      window.alert('Response recieved from server = ' + data);\n    });\n  }\n\n\n   const handleSavePatient = () => {\n      savePatient();\n\n   }\n\n   const handleClearForm = () => {\n      setDob('');\n      setPatientId('');\n      setPatientName('');\n      setTreatmentId('');\n      setAddress('');\n      setAllergy('')\n\n }\n\n\n\n\n    return(\n\n    <div>\n       <Box \n       display=\"flex\" \n       justifyContent=\"center\"\n        alignItems=\"center\">\n        <FormControl className=\"forms\">\n       \n        <FormLabel style={{color:\"#3f51b5\"}} >\n            <h2 >\n             <strong>\n               <u>  Create Patient </u>\n             </strong>\n           </h2>\n           </FormLabel>\n        \n           \n        <FormGroup className=\"forms\">\n           <TextField\n                className=\"textfield\"\n              \n                type=\"text\"\n                placeholder=\"Full Name\"\n                alignItems=\"center\"\n                value={patientName}\n                onChange={(e) => setPatientName(e.target.value)}\n                variant=\"outlined\"\n                label=\"Full Name\"\n                >\n                </TextField>\n               <br/>\n              \n                <TextField\n                className=\"textfield\"\n                label=\"Date Of Birth\"\n                type=\"text\"\n                placeholder=\"Date of Birth\"\n                value={dob}\n                onChange={(e) => setDob(e.target.value)}\n                variant=\"outlined\"\n                \n              />\n                   <br/>\n\n                   <TextField\n                className=\"textfield\"\n               \n                type=\"text\"\n                \n            \n                label=\"Address\"\n                openTo=\"year\"\n                value={address}\n                onChange={(e) => setAddress(e.target.value)}\n                variant=\"outlined\"\n                \n              />\n                   <br/>\n              \n            \n                 <TextField\n                className=\"textfield\"\n          \n                type=\"number\"\n                placeholder=\"Treatment ID\"\n                label=\"Treatment ID\"\n                value={treatmentId}\n                onChange={(e) => setTreatmentId(e.target.value)}\n                variant=\"outlined\"\n             \n              />\n         \n         <br/>\n              \n          \n\n              <TextField\n                    className=\"textfield\"\n                    label=\"Patient ID\"\n                    type=\"number\"\n                    placeholder=\"Patient ID\"\n                    value={patientId}\n                    onChange={(e) => setPatientId(e.target.value)}\n                    variant=\"outlined\"\n                   \n                   \n             />\n              <br/>\n             \n                <TextField\n                className=\"textfield\"\n                label = \"Allergy\"\n                \n                type=\"number\"\n                placeholder=\"Allergy\"\n                value={allergy}\n                onChange={(e) => setAllergy(e.target.value)}\n                variant=\"outlined\"\n              \n                \n              />\n              </FormGroup>\n              <br/>\n            \n<FormControl >\n\n\n\n\n                \n                  <RadioGroup\n        row\n        aria-label=\"gender\"\n        defaultValue=\"female\"\n        name=\"radio-buttons-group\"\n        className=\"radioButton\"\n        >\n        <FormControlLabel value=\"female\" control={<Radio />} label=\"Female\" />\n        <FormControlLabel value=\"male\" control={<Radio />} label=\"Male\" />\n        <FormControlLabel value=\"other\" control={<Radio />} label=\"Other\" />\n        \n    \n        </RadioGroup>\n\n        </FormControl>\n        <Grid className=\"patientButtons\">\n              <ButtonGroup variant=\"outlined\"  className=\"smallButton\">\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n                className=\"smallButton\"\n                onClick={handleSavePatient}\n                style={{backgroundcolor: \"red\"}}\n                \n             \n              >\n                Save Patient\n              </Button>\n       \n\n              <Button\n                color=\"secondary\"\n                variant=\"contained\"\n                className=\"smallButton\"\n                onClick={handleClearForm}\n               \n                \n              >\n                Clear Form\n              </Button>\n\n\n\n              <GreenButton\n             variant='contained'\n              color='secondary'\n              onClick={updatePatient}\n             \n              >Update Patient</GreenButton>\n\n\n         </ButtonGroup>\n         </Grid>\n       \n      \n    </FormControl>\n\n    \n\n        </Box>\n     \n      \n    </div>\n    )\n\n}\n\nexport default Patient;\n\n//https://www.youtube.com/watch?v=-XKaSCU0ZLM&t=2783s for notes and also to help with building"]},"metadata":{},"sourceType":"module"}
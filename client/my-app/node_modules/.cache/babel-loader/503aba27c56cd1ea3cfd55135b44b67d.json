{"ast":null,"code":"var _jsxFileName = \"/Users/adamfoody/mwa/test/client/my-app/src/PatientTable.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport { TableContainer, Button, Table, Paper, TableHead, TableRow, TableCell, TableBody, makeStyles } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  tableHead: {\n    borderBottomStyle: \"solid\",\n    borderBottomColor: \"blue\"\n  },\n  stickyHeader: {}\n}));\nexport default function PatientTable() {\n  _s();\n\n  const classes = useStyles();\n  const [patients, setPatients] = React.useState([]);\n  const [displayPatients, setDisplayPatients] = useState(true);\n\n  function fetchPatientRecords() {\n    axios.get('http://localhost:8081/patient').then(response => {\n      // handle success\n      setPatients(response.data);\n    });\n  }\n\n  for (let i = 0; i < 1; i++) {\n    fetchPatientRecords();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: displayPatients == true && /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      className: classes.tableContainer,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        sx: {\n          minWidth: 650\n        },\n        \"aria-label\": \"simple table\",\n        variant: \"outlined\",\n        stickyHeader: true,\n        \"aria-label\": \"simple table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            style: {\n              borderBottom: \"2px solid #3f51b5\",\n              borderTop: \"2px solid #3f51b5\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \" Patient Table \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 16\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Name \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Patient ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"DOB\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Treatment ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Has Allergy\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"View Treatment \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Delete Patient\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: patients.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n            sx: {\n              '&:last-child td, &:last-child th': {\n                border: 0\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              component: \"th\",\n              scope: \"row\",\n              children: row.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: row.patientId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: row.dob\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: row.address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: row.treatmentId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this), row.allergy == 0 && /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"PATIENT HAS NO ALLERGY!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this), row.allergy == 1 && /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              className: \"hasAllergy\",\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \" PATIENT HAS ALLERGY! \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                className: \"smallButton\",\n                color: \"primary\",\n                variant: \"outlined\",\n                children: \"View Treatment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                className: \"smallButton\",\n                color: \"primary\",\n                variant: \"outlined\",\n                children: \"Delete Patient\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 17\n            }, this)]\n          }, row.patientId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n/*thoughts, why not call fetchPatientRecords in a function in the return statement, then after render the table. \nThis way we call the function and setPatients = \n\n\n\n*/\n\n_s(PatientTable, \"aUR9V3hJNcdmYM3hwl4ciRaZ0Gc=\", false, function () {\n  return [useStyles];\n});\n\n_c = PatientTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"PatientTable\");","map":{"version":3,"sources":["/Users/adamfoody/mwa/test/client/my-app/src/PatientTable.js"],"names":["React","useState","useEffect","axios","TableContainer","Button","Table","Paper","TableHead","TableRow","TableCell","TableBody","makeStyles","useStyles","theme","tableHead","borderBottomStyle","borderBottomColor","stickyHeader","PatientTable","classes","patients","setPatients","displayPatients","setDisplayPatients","fetchPatientRecords","get","then","response","data","i","tableContainer","minWidth","borderBottom","borderTop","map","row","border","name","patientId","dob","address","treatmentId","allergy"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport React , {useState, useEffect} from \"react\"\nimport axios from 'axios';\nimport { TableContainer, Button, Table, Paper, TableHead, TableRow, TableCell, TableBody, makeStyles} from '@material-ui/core';\n\n\nconst useStyles = makeStyles((theme) => ({\n    tableHead: {\n        borderBottomStyle: \"solid\",\n        borderBottomColor: \"blue\"\n    },\n    stickyHeader:{\n      \n    }\n}));\n\n\n\n\nexport default function PatientTable() {\n\n    const classes = useStyles();\n\n    const [patients, setPatients] = React.useState([]);\n    const [displayPatients, setDisplayPatients] = useState(true);\n\n    function fetchPatientRecords() {\n        axios.get('http://localhost:8081/patient').then((response) => {\n          // handle success\n          setPatients(response.data);\n         \n        });\n      }\n\n    for(let i = 0; i<1; i++){\n        fetchPatientRecords();\n    }\n   \n\n   \n\n          \n          \n    return (     \n\n\n\n        <div>\n        {  displayPatients == true && (\n\n            \n\n            <TableContainer component={Paper} className={classes.tableContainer}>\n            \n\n            <Table sx={{ minWidth: 650 }} aria-label=\"simple table\" variant=\"outlined\" stickyHeader aria-label=\"simple table\">\n        <TableHead >\n        <TableCell\n                style={{\n                    borderBottom: \"2px solid #3f51b5\", borderTop: \"2px solid #3f51b5\"\n                    \n                    \n                }}\n\n\n            >\n               <h3> Patient Table </h3>\n            </TableCell>\n      \n          <TableRow>\n            <TableCell>Name </TableCell>\n            <TableCell align=\"right\">Patient ID</TableCell>\n            <TableCell align=\"right\">DOB</TableCell>\n            <TableCell align=\"right\">Address</TableCell>\n            <TableCell align=\"right\">Treatment ID</TableCell>\n            <TableCell align=\"right\">Has Allergy</TableCell>\n            <TableCell align=\"right\">View Treatment </TableCell>\n            <TableCell align=\"right\">Delete Patient</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {patients.map((row) => (\n            <TableRow\n              key={row.patientId}\n              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n            >\n              <TableCell component=\"th\" scope=\"row\">\n                {row.name}\n              </TableCell>\n              <TableCell align=\"right\">{row.patientId}</TableCell>\n              <TableCell align=\"right\">{row.dob}</TableCell>\n              <TableCell align=\"right\">{row.address}</TableCell>\n              <TableCell align=\"right\">{row.treatmentId}</TableCell>\n\n                {row.allergy == 0 && (\n                <TableCell align=\"right\">PATIENT HAS NO ALLERGY!</TableCell>\n                )}\n                {row.allergy == 1 && (\n                <TableCell align=\"right\" className=\"hasAllergy\"> \n                <strong> PATIENT HAS ALLERGY! </strong> \n                </TableCell>\n                )}\n                <TableCell> \n\n                <Button\n                  className=\"smallButton\"\n                  color=\"primary\"\n                  variant=\"outlined\"\n                 \n                >\n               \n                  View Treatment\n                </Button>\n           \n\n                </TableCell>\n\n\n                <TableCell>\n                  \n\n                <Button\n                  className=\"smallButton\"\n                  color=\"primary\"\n                  variant=\"outlined\"\n                 \n                >\n              \n                  Delete Patient\n                </Button>\n                  \n                </TableCell>\n\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n  \n\n\n\n\n            </TableContainer>\n\n      \n           \n          \n            \n        )}\n     \n      \n\n     \n                           \n\n        </div>\n    )\n}\n\n/*thoughts, why not call fetchPatientRecords in a function in the return statement, then after render the table. \nThis way we call the function and setPatients = \n\n\n\n*/\n"]},"metadata":{},"sourceType":"module"}
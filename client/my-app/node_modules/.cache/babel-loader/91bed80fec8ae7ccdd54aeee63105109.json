{"ast":null,"code":"var _jsxFileName = \"/Users/adamfoody/mwa/incase-break/incasebreak,new/client/my-app/src/SplitButton.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport Button from '@mui/material/Button';\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport Grow from '@mui/material/Grow';\nimport Paper from '@mui/material/Paper';\nimport Popper from '@mui/material/Popper';\nimport MenuItem from '@mui/material/MenuItem';\nimport MenuList from '@mui/material/MenuList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = ['Show Treatments Inner Join Patients', 'Squash and merge', ''];\nexport default function SplitButton() {\n  _s();\n\n  const [open, setOpen] = React.useState(false);\n  const anchorRef = React.useRef(null);\n  const [selectedIndex, setSelectedIndex] = React.useState(1);\n\n  const handleClick = () => {\n    console.info(`You clicked ${options[selectedIndex]}`);\n  };\n\n  const handleMenuItemClick = (event, index) => {\n    setSelectedIndex(index);\n    setOpen(false);\n  };\n\n  const handleToggle = () => {\n    setOpen(prevOpen => !prevOpen);\n  };\n\n  const handleClose = event => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ButtonGroup, {\n      style: {\n        fontSize: 50,\n        bgcolor: \"#3f51b5\"\n      },\n      className: \"SplitButton\",\n      variant: \"contained\",\n      ref: anchorRef,\n      \"aria-label\": \"split button\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          fontSize: 50,\n          bgcolor: \"#3f51b5\"\n        },\n        onClick: handleClick,\n        children: options[selectedIndex]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          fontSize: 50,\n          bgcolor: \"#3f51b5\"\n        },\n        size: \"small\",\n        \"aria-controls\": open ? 'split-button-menu' : undefined,\n        \"aria-expanded\": open ? 'true' : undefined,\n        \"aria-label\": \"select merge strategy\",\n        \"aria-haspopup\": \"menu\",\n        onClick: handleToggle,\n        children: /*#__PURE__*/_jsxDEV(ArrowDropDownIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Popper, {\n      open: open,\n      anchorEl: anchorRef.current,\n      role: undefined,\n      transition: true,\n      disablePortal: true,\n      children: _ref => {\n        let {\n          TransitionProps,\n          placement\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(Grow, { ...TransitionProps,\n          style: {\n            transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom'\n          },\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            children: /*#__PURE__*/_jsxDEV(ClickAwayListener, {\n              onClickAway: handleClose,\n              children: /*#__PURE__*/_jsxDEV(MenuList, {\n                id: \"split-button-menu\",\n                style: {\n                  fontSize: 50,\n                  bgcolor: \"#3f51b5\"\n                },\n                children: options.map((option, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  disabled: index === 2,\n                  selected: index === selectedIndex,\n                  style: {\n                    fontSize: 50,\n                    bgcolor: \"#3f51b5\"\n                  },\n                  onClick: event => handleMenuItemClick(event, index),\n                  children: option\n                }, option, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SplitButton, \"iOJX1GbrjEJXdM49lHfo+/a1EuI=\");\n\n_c = SplitButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"SplitButton\");","map":{"version":3,"sources":["/Users/adamfoody/mwa/incase-break/incasebreak,new/client/my-app/src/SplitButton.js"],"names":["React","Button","ButtonGroup","ArrowDropDownIcon","ClickAwayListener","Grow","Paper","Popper","MenuItem","MenuList","options","SplitButton","open","setOpen","useState","anchorRef","useRef","selectedIndex","setSelectedIndex","handleClick","console","info","handleMenuItemClick","event","index","handleToggle","prevOpen","handleClose","current","contains","target","fontSize","bgcolor","undefined","TransitionProps","placement","transformOrigin","map","option"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport Grow from '@mui/material/Grow';\nimport Paper from '@mui/material/Paper';\nimport Popper from '@mui/material/Popper';\nimport MenuItem from '@mui/material/MenuItem';\nimport MenuList from '@mui/material/MenuList';\n\nconst options = ['Show Treatments Inner Join Patients', 'Squash and merge', ''];\n\nexport default function SplitButton() {\n  const [open, setOpen] = React.useState(false);\n  const anchorRef = React.useRef(null);\n  const [selectedIndex, setSelectedIndex] = React.useState(1);\n\n  const handleClick = () => {\n    console.info(`You clicked ${options[selectedIndex]}`);\n  };\n\n  const handleMenuItemClick = (event, index) => {\n    setSelectedIndex(index);\n    setOpen(false);\n  };\n\n  const handleToggle = () => {\n    setOpen((prevOpen) => !prevOpen);\n  };\n\n  const handleClose = (event) => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  return (\n    <React.Fragment>\n      <ButtonGroup          style={{ fontSize: 50, bgcolor:\"#3f51b5\" }} className=\"SplitButton\" variant=\"contained\" ref={anchorRef} aria-label=\"split button\">\n        <Button          style={{ fontSize: 50, bgcolor:\"#3f51b5\" }} onClick={handleClick}>{options[selectedIndex]}</Button>\n        <Button\n             style={{ fontSize: 50, bgcolor:\"#3f51b5\" }}\n          size=\"small\"\n          aria-controls={open ? 'split-button-menu' : undefined}\n          aria-expanded={open ? 'true' : undefined}\n          aria-label=\"select merge strategy\"\n          aria-haspopup=\"menu\"\n          onClick={handleToggle}\n          >\n          \n          <ArrowDropDownIcon />\n        </Button>\n      </ButtonGroup>\n      <Popper\n        open={open}\n        anchorEl={anchorRef.current}\n        role={undefined}\n        transition\n        disablePortal\n      >\n        {({ TransitionProps, placement }) => (\n          <Grow\n            {...TransitionProps}\n            style={{\n              transformOrigin:\n                placement === 'bottom' ? 'center top' : 'center bottom',\n            }}\n          >\n            <Paper>\n              <ClickAwayListener onClickAway={handleClose}>\n                <MenuList id=\"split-button-menu\"\n                style={{ fontSize: 50, bgcolor:\"#3f51b5\" }}\n                >\n                  {options.map((option, index) => (\n                    <MenuItem\n                      key={option}\n                      disabled={index === 2}\n                      selected={index === selectedIndex}\n                      style={{ fontSize: 50, bgcolor:\"#3f51b5\" }}\n                      onClick={(event) => handleMenuItemClick(event, index)}\n                    >\n                      {option}\n                    </MenuItem>\n                  ))}\n                </MenuList>\n              </ClickAwayListener>\n            </Paper>\n          </Grow>\n        )}\n      </Popper>\n    </React.Fragment>\n  );\n}"]},"metadata":{},"sourceType":"module"}